{"version":3,"sources":["./projects/gctr-design-system/src/gctr-design-system.module.ts","./projects/gctr-design-system/src/lib/action-bar/action-bar.component.ts","./projects/gctr-design-system/src/lib/action-bar/action-bar.component.html","./projects/gctr-design-system/src/lib/action-bar/action-bar.module.ts","./projects/gctr-design-system/src/lib/action-button/action-button.component.ts","./projects/gctr-design-system/src/lib/action-button/action-button.component.html","./projects/gctr-design-system/src/lib/action-button/action-button.module.ts","./projects/gctr-design-system/src/lib/button/button.component.ts","./projects/gctr-design-system/src/lib/button/button.component.html","./projects/gctr-design-system/src/lib/button/button.module.ts","./projects/gctr-design-system/src/lib/card/card.component.ts","./projects/gctr-design-system/src/lib/card/card.component.html","./projects/gctr-design-system/src/lib/card/card.module.ts","./projects/gctr-design-system/src/lib/core-components/content/content.component.ts","./projects/gctr-design-system/src/lib/core-components/content/content.component.html","./projects/gctr-design-system/src/lib/core-components/content/content.module.ts","./projects/gctr-design-system/src/lib/core-components/header/header.component.ts","./projects/gctr-design-system/src/lib/core-components/header/header.component.html","./projects/gctr-design-system/src/lib/core-components/header/header.module.ts","./projects/gctr-design-system/src/lib/core-components/sidenav/sidenav.component.ts","./projects/gctr-design-system/src/lib/core-components/sidenav/sidenav.component.html","./projects/gctr-design-system/src/lib/core-components/sidenav/sidenav.module.ts","./projects/gctr-design-system/src/lib/data-table/data-table.module.ts","./projects/gctr-design-system/src/lib/data-table/data-table/data-table.component.ts","./projects/gctr-design-system/src/lib/data-table/data-table/data-table.component.html","./projects/gctr-design-system/src/lib/data-table/index.ts","./projects/gctr-design-system/src/lib/data-table/models/data-column-mode.ts","./projects/gctr-design-system/src/lib/data-table/models/index.ts","./projects/gctr-design-system/src/lib/icon/icon.component.ts","./projects/gctr-design-system/src/lib/icon/icon.component.html","./projects/gctr-design-system/src/lib/icon/icon.module.ts","./projects/gctr-design-system/src/lib/loading-card/loading-card.component.ts","./projects/gctr-design-system/src/lib/loading-card/loading-card.component.html","./projects/gctr-design-system/src/lib/loading-card/loading-card.module.ts","./projects/gctr-design-system/src/lib/modal/modal.component.ts","./projects/gctr-design-system/src/lib/modal/modal.component.html","./projects/gctr-design-system/src/lib/modal/modal.module.ts","./projects/gctr-design-system/src/lib/popover/popover.component.ts","./projects/gctr-design-system/src/lib/popover/popover.component.html","./projects/gctr-design-system/src/lib/popover/popover.module.ts","./projects/gctr-design-system/src/lib/progress-bar/progress-bar.component.ts","./projects/gctr-design-system/src/lib/progress-bar/progress-bar.component.html","./projects/gctr-design-system/src/lib/progress-bar/progress-bar.module.ts","./projects/gctr-design-system/src/lib/rating/rating.component.ts","./projects/gctr-design-system/src/lib/rating/rating.component.html","./projects/gctr-design-system/src/lib/rating/rating.module.ts","./projects/gctr-design-system/src/lib/spinner/spinner.component.ts","./projects/gctr-design-system/src/lib/spinner/spinner.component.html","./projects/gctr-design-system/src/lib/spinner/spinner.module.ts","./projects/gctr-design-system/src/public_api.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/clipboard/clipboard.service.ts","./src/app/core/documentation/documentation.service.ts","./src/app/core/index.ts","./src/app/layout/content/content.component.ts","./src/app/layout/content/content.component.html","./src/app/layout/footer/footer.component.ts","./src/app/layout/header/header.component.ts","./src/app/layout/header/header.component.html","./src/app/layout/index.ts","./src/app/sections/actions/actions.component.ts","./src/app/sections/actions/actions.component.html","./src/app/sections/buttons/buttons.component.ts","./src/app/sections/buttons/buttons.component.html","./src/app/sections/colors/colors.component.ts","./src/app/sections/colors/colors.component.html","./src/app/sections/css/css.component.ts","./src/app/sections/css/css.component.html","./src/app/sections/dashboard/dashboard.component.ts","./src/app/sections/dashboard/dashboard.component.html","./src/app/sections/data-table/data-table.component.ts","./src/app/sections/data-table/data-table.component.html","./src/app/sections/gctr-card/gctr-card.component.ts","./src/app/sections/gctr-card/gctr-card.component.html","./src/app/sections/grid/grid.component.ts","./src/app/sections/grid/grid.component.html","./src/app/sections/header/header.component.ts","./src/app/sections/header/header.component.html","./src/app/sections/icons/icons.component.ts","./src/app/sections/icons/icons.component.html","./src/app/sections/index.ts","./src/app/sections/loading-card/loading-card.component.ts","./src/app/sections/loading-card/loading-card.component.html","./src/app/sections/popover/popover.component.ts","./src/app/sections/popover/popover.component.html","./src/app/sections/progress-bar/progress-bar.component.ts","./src/app/sections/progress-bar/progress-bar.component.html","./src/app/sections/rating/rating.component.ts","./src/app/sections/rating/rating.component.html","./src/app/sections/structure/structure.component.ts","./src/app/sections/structure/structure.component.html","./src/app/sections/typography/typography.component.ts","./src/app/sections/typography/typography.component.html","./src/app/services/buttons.service.ts","./src/app/services/icons.service.ts","./src/app/shared/code/code.component.ts","./src/app/shared/code/code.component.html","./src/app/shared/documentation/documentation.component.ts","./src/app/shared/documentation/documentation.component.html","./src/app/shared/shared.modules.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/*\r\n * Core Lib Modules\r\n * Alphabetical order please\r\n */\r\nimport { GctrHeaderModule } from './lib/core-components/header/header.module';\r\nimport { GctrContentModule } from './lib/core-components/content/content.module';\r\nimport { GctrSidenavModule } from './lib/core-components/sidenav/sidenav.module';\r\n\r\n/*\r\n * Components Lib Modules\r\n * Alphabetical order please\r\n */\r\nimport { GctrActionBarModule } from './lib/action-bar/action-bar.module';\r\nimport { GctrActionButtonModule  } from './lib/action-button/action-button.module';\r\nimport { GctrButtonModule } from './lib/button/button.module';\r\nimport { GctrCardModule } from './lib/card/card.module';\r\nimport { GctrDataTableModule } from './lib/data-table/data-table.module';\r\nimport { GctrLoadingCardModule } from './lib/loading-card/loading-card.module';\r\nimport { GctrIconModule } from './lib/icon/icon.module';\r\nimport { GctrModalModule } from './lib/modal/modal.module';\r\nimport { GctrPopoverModule } from './lib/popover/popover.module';\r\nimport { GctrProgressBarModule } from './lib/progress-bar/progress-bar.module';\r\nimport { GctrRatingModule } from './lib/rating/rating.module';\r\nimport { GctrSpinnerModule } from './lib/spinner/spinner.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    GctrHeaderModule,\r\n    GctrSidenavModule,\r\n    GctrContentModule,\r\n    GctrActionBarModule,\r\n    GctrActionButtonModule,\r\n    GctrButtonModule,\r\n    GctrCardModule,\r\n    GctrDataTableModule,\r\n    GctrIconModule,\r\n    GctrLoadingCardModule,\r\n    GctrModalModule,\r\n    GctrPopoverModule,\r\n    GctrProgressBarModule,\r\n    GctrSpinnerModule,\r\n    GctrRatingModule\r\n  ],\r\n  exports: [\r\n    GctrHeaderModule,\r\n    GctrSidenavModule,\r\n    GctrContentModule,\r\n    GctrActionBarModule,\r\n    GctrActionButtonModule,\r\n    GctrButtonModule,\r\n    GctrCardModule,\r\n    GctrDataTableModule,\r\n    GctrIconModule,\r\n    GctrLoadingCardModule,\r\n    GctrModalModule,\r\n    GctrPopoverModule,\r\n    GctrProgressBarModule,\r\n    GctrSpinnerModule,\r\n    GctrRatingModule\r\n  ]\r\n})\r\nexport class GctrDesignSystemModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-action-bar',\r\n  templateUrl: './action-bar.component.html',\r\n  styleUrls: ['./action-bar.component.scss']\r\n})\r\nexport class ActionBarComponent implements OnInit {\r\n  @Input() cssClass = '';\r\n  @Input() content = '';\r\n  @Input() isLoading = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get cssClasses() {\r\n    let _cssClasses = this.cssClass;\r\n    if (this.content === 'end') {\r\n      _cssClasses = _cssClasses +  ' justify-content-end';\r\n    }\r\n    return _cssClasses;\r\n  }\r\n\r\n}\r\n","<div class=\"action-bar\" [ngClass]=\"cssClasses\">\r\n  <ng-content></ng-content>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ActionBarComponent } from './action-bar.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ActionBarComponent],\r\n  exports: [ActionBarComponent]\r\n})\r\nexport class GctrActionBarModule { }\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-action-button',\r\n  templateUrl: './action-button.component.html',\r\n  styleUrls: ['./action-button.component.scss']\r\n})\r\nexport class ActionButtonComponent {\r\n  @Input() label: string = '';\r\n  @Input() icon: string = '';\r\n  @Input() type = 'button';\r\n  @Input() iconFont: 'gctr' | 'glyphicon' | 'font-awesome-brand' | 'font-awesome-solid' | 'material-icons' | 'material-outlined' = 'material-icons';\r\n  @Input() tooltip: string = '';\r\n  @Input() cssClass: string = '';\r\n  @Input() size: 'small' | 'big' | 'bigger' = 'big';\r\n  @Input() disabled = false;\r\n  @Output() callback = new EventEmitter();\r\n  \r\n  constructor() { }\r\n  \r\n  get classes() {\r\n    return this.size + ' ' + this.cssClass;\r\n  }\r\n\r\n}\r\n","<button \r\n  class=\"action-button ripple\"\r\n  [ngClass]=\"classes\"\r\n  [type]=\"type\"\r\n  [matTooltip]=\"tooltip\"\r\n  [disabled]=\"disabled\"\r\n  (click)=\"callback.emit($event)\">\r\n  <div class=\"action-button-wrapper\">\r\n    <ng-template [ngIf]=\"icon\">\r\n      <gctr-icon [icon]=\"icon\" [iconFont]=\"iconFont\" [size]=\"size\"></gctr-icon>\r\n    </ng-template>\r\n    <h3> {{ label }} </h3>\r\n  </div>\r\n</button>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { GctrIconModule } from '../icon/icon.module';\r\nimport { ActionButtonComponent } from './action-button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatTooltipModule,\r\n    GctrIconModule\r\n  ],\r\n  declarations: [ActionButtonComponent],\r\n  exports: [ActionButtonComponent]\r\n})\r\nexport class GctrActionButtonModule { }\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss']\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  /** Design of the button */\r\n  @Input() design: 'main' | 'stroke' | 'basic' | 'white' | 'float' | 'float-cancel' = 'basic';\r\n  /** Color palette of the button */\r\n  @Input() color: 'primary' | 'secondary';\r\n  /** Text label for the button  */\r\n  @Input() label: string;\r\n  /** Type attribute of the button */\r\n  @Input() type: 'submit' | 'reset' | 'button' = 'submit';\r\n  /** Icon name of icon to appear */\r\n  @Input() icon: string;\r\n  /** Icon library to whivh the icon belongs */\r\n  @Input() iconFont: 'gctr' | 'glyphicon' |\r\n    'font-awesome-brand' | 'font-awesome-solid' |\r\n    'material-icons' | 'material-outlined' = 'material-icons';\r\n  /** Additional css classes to apply to the button */\r\n  @Input() cssClass: string = '';\r\n  /** Text for the button's tooltip */\r\n  @Input() tooltip: string = '';\r\n  /** Disable state of the button */\r\n  @Input() disabled = false;\r\n  /** Hide label on mobile screens  */\r\n  @Input() hideLabelOnMobile: boolean = false;\r\n  /** Method called when button is clicked */\r\n  @Output() callback = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  get classes() {\r\n    let classes = this.design;\r\n    if (this.design !== 'white' && this.color) {\r\n      classes += ' ' + this.color;\r\n    }\r\n    if (this.hideLabelOnMobile) {\r\n      classes += ' hide-label-on-mobile';\r\n    }\r\n    if (this.cssClass) {\r\n      classes += ' ' + this.cssClass;\r\n    }\r\n    return classes;\r\n  }\r\n}\r\n","<button \r\n  mat-button\r\n  class=\"button\"\r\n  [class.single]=\"!label\"\r\n  [ngClass]=\"classes\"\r\n  [type]=\"type\"\r\n  [matTooltip]=\"tooltip\"\r\n  [disabled]=\"disabled\"\r\n  (click)=\"callback.emit($event)\"\r\n  >\r\n  <ng-template [ngIf]=\"icon\"><gctr-icon [icon]=\"icon\" [iconFont]=\"iconFont\"></gctr-icon></ng-template>\r\n  <ng-template [ngIf]=\"label\"><span class=\"button-label\">{{ label }}</span></ng-template>\r\n</button>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { GctrIconModule } from '../icon/icon.module';\r\nimport { ButtonComponent } from './button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    GctrIconModule\r\n  ],\r\n  declarations: [ButtonComponent],\r\n  exports: [ButtonComponent]\r\n})\r\nexport class GctrButtonModule {}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss']\r\n})\r\nexport class CardComponent {\r\n  @Input() cssClass: string = '';\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div class=\"gctr-card\" [ngClass]=\"cssClass\">\r\n  <ng-content></ng-content>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CardComponent } from './card.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [CardComponent],\r\n  exports: [CardComponent]\r\n})\r\nexport class GctrCardModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.scss']\r\n})\r\nexport class ContentComponent implements OnInit {\r\n  @Input() cssClass: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","<div class=\"gctr-content\" [ngClass]=\"cssClass\">\r\n  <ng-content></ng-content>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ContentComponent } from './content.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ContentComponent],\r\n  exports: [ContentComponent]\r\n})\r\nexport class GctrContentModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Input() cssClass = '';\r\n  @Input() isLoading: boolean;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get classes() {\r\n    let classes = '';\r\n    if (this.cssClass) {\r\n      classes += ' ' + this.cssClass;\r\n    }\r\n    return classes;\r\n  }\r\n\r\n}\r\n","<div class=\"gctr-header-wrapper\">\r\n  <gctr-progress-bar class=\"absolute-top-left z999 full-width\" [isLoading]=\"isLoading\"></gctr-progress-bar>\r\n  <div class=\"gctr-header\" [ngClass]=\"classes\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HeaderComponent } from './header.component';\r\nimport { GctrProgressBarModule } from '../../progress-bar/progress-bar.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    GctrProgressBarModule\r\n  ],\r\n  declarations: [HeaderComponent],\r\n  exports: [HeaderComponent]\r\n})\r\nexport class GctrHeaderModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div id=\"gctrSidenav\">\r\n  <div class=\"gctr-sidenav-container\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SidenavComponent } from './sidenav.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [SidenavComponent],\r\n  exports: [SidenavComponent]\r\n})\r\nexport class GctrSidenavModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GctrDataTableComponent } from './data-table/data-table.component';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { GctrButtonModule } from '../button/button.module';\r\n\r\n@NgModule({\r\n  declarations: [GctrDataTableComponent],\r\n  imports: [\r\n    CommonModule,\r\n    GctrButtonModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatFormFieldModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatInputModule\r\n  ],\r\n  exports: [GctrDataTableComponent]\r\n})\r\nexport class GctrDataTableModule { }\r\n","import { Component, OnInit, AfterViewInit, Input, EventEmitter, Output, ViewChild, ViewChildren, QueryList } from '@angular/core';\r\nimport { DataTableSettings } from '../models/data-column-settings';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatCheckbox, MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { DataColumnMode } from '../models/data-column-mode';\r\nimport { DataColumnDefinition } from '../models/data-column-definition';\r\n\r\n// see here https://stackblitz.com/edit/angular-material-table-responsive?file=app%2Fapp.component.html\r\n\r\n/**\r\n * If you want to use a checkbox column on the left hand side and a selection model,\r\n * then pass in the 'checkbox' string as the first element of the displayedColumns array:\r\n * `displayedColumns = ['checkbox', ...rest]`\r\n * You should also provide a selectionModel in this case\r\n * ---------------------------------\r\n */\r\n@Component({\r\n  selector: 'gctr-data-table',\r\n  templateUrl: './data-table.component.html',\r\n  styleUrls: ['./data-table.component.scss']\r\n})\r\nexport class GctrDataTableComponent<T> implements OnInit, AfterViewInit {\r\n  public clickedItem: T;\r\n  // Basic Properties\r\n  @Input() dataTableSettings: DataTableSettings<T>;\r\n  // SelectionModel for use with checkboxes\r\n  _selectionModelValue: SelectionModel<T>;\r\n  @Input()\r\n  get selectionModel(): SelectionModel<T> {\r\n    return this._selectionModelValue;\r\n  }\r\n  @Output() selectionModelChange = new EventEmitter();\r\n  set selectionModel(val: SelectionModel<T>) {\r\n    this._selectionModelValue = val;\r\n    this.selectionModelChange.emit(this._selectionModelValue);\r\n  }\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChildren(MatCheckbox) checkboxes: QueryList<MatCheckbox>;\r\n  private _itemsShown: T[];\r\n  constructor() { }\r\n  ngAfterViewInit() {\r\n    this.dataTableSettings.dataSource.paginator = this.paginator;\r\n    this.dataTableSettings.dataSource.sort = this.sort;\r\n    this._itemsShown = this.dataTableSettings.dataSource.data.slice(0, this.paginator.pageSize);\r\n    this.dataTableSettings.dataSource.paginator.page.subscribe((pageEvent: PageEvent) => {\r\n      const startIndex = pageEvent.pageIndex * pageEvent.pageSize;\r\n      const endIndex = startIndex + pageEvent.pageSize;\r\n      this._itemsShown = this.dataTableSettings.dataSource.filteredData.slice(startIndex, endIndex);\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    // Warn for proper usage of checkboxes and selection model\r\n    if (this.dataTableSettings.displayedColumns.some(e => e === 'checkbox') && !this.selectionModel) {\r\n      console.warn('\\\r\n      It is recommended to provide a selection model in checkbox mode\\n\\\r\n      for example: `this.selectionModel = new SelectionModel(true);`\\n\\\r\n      `[(selectionModel)]=\"selectionModel\"`'\r\n      );\r\n      this.selectionModel = new SelectionModel(true);\r\n    }\r\n    // Warn for proper usage of menus\r\n    if (this.dataTableSettings.displayedColumns.some(e => e === 'menu') && !this.dataTableSettings.menu) {\r\n      console.warn('You must provide a menu item array for the menu column');\r\n    }\r\n    // Warn for proper use of form field elements\r\n    if ((this.dataTableSettings.columnDefinitions.some(e => {\r\n      return (e.mode === DataColumnMode.checkbox || e.mode === DataColumnMode.input) && !e.disableFormField;\r\n    }))) {\r\n      console.warn('Using form field elements, you should supply a disabling method, e.g. `disableFormField: (row) => false`');\r\n    }\r\n    if (this.dataTableSettings.columnDefinitions.some(e => {\r\n      return e.mode === DataColumnMode.checkbox && !e.checkboxSettings;\r\n    })) {\r\n      console.warn('supply checkbox settings with checkbox column');\r\n    }\r\n    if (this.dataTableSettings.columnDefinitions.some(e => {\r\n      return e.mode === DataColumnMode.input && !e.inputSettings;\r\n    })) {\r\n      console.warn('supply input settings with input column');\r\n    }\r\n  }\r\n  // The following Block is for Checkboxes Behavior\r\n  public checkboxChange(event: MatCheckboxChange, row: T): void {\r\n    const { source, checked } = event;\r\n    if (checked) {\r\n      this.selectionModel.select(row);\r\n    } else {\r\n      this.selectionModel.deselect(row);\r\n    }\r\n  }\r\n  public get isAllSelected(): boolean {\r\n    return this.selectionModel.selected.length === Math.min(this.dataTableSettings.dataSource.data.length, this.paginator.pageSize);\r\n  }\r\n  public get areSomeSelected(): boolean {\r\n    return this.selectionModel.selected.length > 0 && !this.isAllSelected;\r\n  }\r\n  public isItemSelected(row: T): boolean {\r\n    return this.selectionModel.isSelected(row);\r\n  }\r\n  public masterCheckboxChange(event: MatCheckboxChange): void {\r\n    const { source, checked } = event;\r\n    if (this.isAllSelected) {\r\n      this.selectionModel.clear();\r\n    } else {\r\n      this._itemsShown.forEach(e => {\r\n        if (!this.selectionModel.isSelected(e)) {\r\n          this.selectionModel.select(e);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  public trackByColumnName(column: DataColumnDefinition<T>, index: number): string {\r\n    return column.columnName;\r\n  }\r\n  get smallcreen(): boolean {\r\n    return window.innerWidth < 961;\r\n  }\r\n  public handleRowClick(event: Event, row: T): void {\r\n    const target = <HTMLInputElement>event.target;\r\n    const { classList } = target;\r\n    if (\r\n      classList.contains('mat-checkbox-inner-container')\r\n      || classList.contains('row-action-button')\r\n      || classList.contains('mat-button-wrapper')\r\n    ) {\r\n      return;\r\n    }\r\n    if (!this.dataTableSettings.clickableRows) {\r\n      return;\r\n    }\r\n    this.dataTableSettings.handleRowClick ? this.dataTableSettings.handleRowClick(row) : this.selectionModel.toggle(row);\r\n  }\r\n  public handleCellClick(column: DataColumnDefinition<T>, row: T): void {\r\n    if (column.handleCellClick && !(column.mode === DataColumnMode.checkbox)) {\r\n      column.handleCellClick(row);\r\n    }\r\n  }\r\n  getNestedValue(column: DataColumnDefinition<T>, row: T) {\r\n    const properties = column.columnName.split('.');\r\n    let cellContent: any;\r\n    properties.forEach(element => {\r\n      //  Getting the value from the last evaluated parent OR the row itself\r\n      //  allowing nested properties to be correctly evaluated\r\n      cellContent = (cellContent || row)[element];\r\n    });\r\n    return cellContent;\r\n  }\r\n  isRowSelected(row: T): boolean {\r\n    return this.selectionModel ? this.selectionModel.isSelected(row) : false;\r\n  }\r\n}\r\n","<mat-table [dataSource]=\"dataTableSettings.dataSource\">\r\n  <ng-container matColumnDef=\"checkbox\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'customCheckboxColumnClass'\">\r\n      <mat-checkbox [checked]=\"isAllSelected\" [indeterminate]=\"areSomeSelected\" (change)=\"masterCheckboxChange($event)\">\r\n      </mat-checkbox>\r\n    </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'customCheckboxColumnClass'\">\r\n      <mat-checkbox [checked]=\"isItemSelected(row)\" class=\"the_checkboxes\" (change)=\"checkboxChange($event, row)\">\r\n      </mat-checkbox>\r\n      <gctr-button class=\"show_in_small_screen align-right-small-screen\" *ngIf=\"dataTableSettings.menu\"\r\n        [matMenuTriggerFor]=\"appMenu\" (click)=\"clickedItem = row\" icon=\"more_vert\" [disabled]=\"!dataTableSettings.menu\">\r\n      </gctr-button>\r\n    </mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"menu\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'customMenuColumnClass flex justify-content-center'\">\r\n    </mat-header-cell>\r\n    <mat-cell class=\"hide_in_small_screen\" *matCellDef=\"let row\"\r\n      [ngClass]=\"'customMenuColumnClass flex justify-content-center'\">\r\n      <gctr-button [matMenuTriggerFor]=\"appMenu\" (click)=\"clickedItem = row\" [cssClass]=\"'row-action-button'\"\r\n        icon=\"more_vert\" [disabled]=\"!dataTableSettings.menu\">\r\n      </gctr-button>\r\n    </mat-cell>\r\n  </ng-container>\r\n  <ng-container *ngFor=\"let column of dataTableSettings.columnDefinitions; trackBy: trackByColumnName\"\r\n    [matColumnDef]=\"column.columnName\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header\r\n      [class.customExtraCheckboxColumnClass]=\"column.mode === 'extra-checkbox'\"\r\n      [ngClass]=\"smallcreen ? column.customHeaderClassSm : column.customHeaderClassLg\">\r\n      {{ column.title }}\r\n    </mat-header-cell>\r\n    <ng-container [ngSwitch]=\"column.mode\">\r\n      <ng-container *ngSwitchCase=\"'nested'\">\r\n        <mat-cell *matCellDef=\"let row\" class=\"block_small_screen\" [attr.data-label]=\"column.title\"\r\n          [ngClass]=\"smallcreen ? column.customCellClassSm : column.customCellClassLg\"\r\n          (click)=\"handleCellClick(column, row)\" [class.pointer]=\"column.handleCellClick\">\r\n          {{ getNestedValue(column, row) }}\r\n        </mat-cell>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'count'\">\r\n        <mat-cell *matCellDef=\"let row\" class=\"block_small_screen\" [attr.data-label]=\"column.title\"\r\n          [ngClass]=\"smallcreen ? column.customCellClassSm : column.customCellClassLg\"\r\n          (click)=\"handleCellClick(column, row)\" [class.pointer]=\"column.handleCellClick\">\r\n          {{ row.cnt }}\r\n        </mat-cell>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'transformer'\">\r\n        <mat-cell *matCellDef=\"let row\" class=\"block_small_screen\" [attr.data-label]=\"column.title\"\r\n          [ngClass]=\"smallcreen ? column.customCellClassSm : column.customCellClassLg\"\r\n          (click)=\"handleCellClick(column, row)\" [class.pointer]=\"column.handleCellClick\">\r\n          {{ column.transformer(row) }}\r\n        </mat-cell>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'extra-checkbox'\">\r\n        <mat-cell *matCellDef=\"let row\" class=\"block_small_screen customExtraCheckboxColumnClass\"\r\n          [attr.data-label]=\"column.title\" [ngClass]=\"smallcreen ? column.customCellClassSm : column.customCellClassLg\"\r\n          (click)=\"handleCellClick(column, row)\" [class.pointer]=\"column.handleCellClick\">\r\n          <mat-checkbox [disabled]=\"column.disableFormField(row)\"\r\n            [checked]=\"column.checkboxSettings.checkboxChecked(row)\"\r\n            (change)=\"column.checkboxSettings.checkboxChange($event, row)\" class=\"margin-x-auto\"></mat-checkbox>\r\n        </mat-cell>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'list'\">\r\n        <mat-cell *matCellDef=\"let row\" class=\"block_small_screen\"\r\n          [attr.data-label]=\"column.title\" [ngClass]=\"smallcreen ? column.customCellClassSm : column.customCellClassLg\"\r\n          [class.pointer]=\"column.handleCellClick\">\r\n          <ul>\r\n            <li *ngFor=\"let item of column.listAccessor(row)\">{{item}}</li>\r\n          </ul>\r\n        </mat-cell>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'input'\">\r\n        <mat-cell *matCellDef=\"let row\" [attr.data-label]=\"column.title\" class=\"block_small_screen input-cell\"\r\n          [ngClass]=\"smallcreen ? column.customCellClassSm : column.customCellClassLg\"\r\n          (click)=\"handleCellClick(column, row)\" [class.pointer]=\"column.handleCellClick\">\r\n          <mat-form-field class=\"column-input-form-field\" floatLabel=\"always\">\r\n            <input [disabled]=\"column.disableFormField(row)\" [placeholder]=\"smallcreen ? column.title : ''\" matInput\r\n              (keyup)=\"column.inputSettings.inputChange($event, row)\" [value]=\"column.inputSettings.inputValue(row)\" />\r\n          </mat-form-field>\r\n        </mat-cell>\r\n      </ng-container>\r\n      <ng-container *ngSwitchDefault>\r\n        <mat-cell *matCellDef=\"let row\" class=\"block_small_screen\"\r\n          [ngClass]=\"smallcreen ? column.customCellClassSm : column.customCellClassLg\" [attr.data-label]=\"column.title\"\r\n          (click)=\"handleCellClick(column, row)\" [class.pointer]=\"column.handleCellClick\">\r\n          {{ row[column.columnName] }}\r\n        </mat-cell>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n  <mat-header-row *matHeaderRowDef=\"dataTableSettings.displayedColumns\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: dataTableSettings.displayedColumns\"\r\n    [class.hover-bgcolor]=\"!dataTableSettings.hideSelectedRowHighlighting && isRowSelected(row)\"\r\n    [class.pointer]=\"!!dataTableSettings.clickableRows\" (click)=\"handleRowClick($event, row)\"></mat-row>\r\n</mat-table>\r\n\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n\r\n<mat-menu #appMenu=\"matMenu\">\r\n  <div *ngIf=\"dataTableSettings.menu\">\r\n    <ng-container *ngFor=\"let item of dataTableSettings.menu\">\r\n      <button mat-menu-item (click)=\"item.action(clickedItem)\" [disabled]=\"item.disabled && item.disabled(clickedItem)\">\r\n        <mat-icon>{{ item.icon }}</mat-icon>\r\n        {{ item.label }}\r\n      </button>\r\n    </ng-container>\r\n  </div>\r\n</mat-menu>","export * from './data-table.module';\r\nexport * from './data-table/data-table.component';\r\nexport * from './models';\r\n","export enum DataColumnMode {\r\n    // If this column is a number index column\r\n    count = 'count',\r\n    // If Data is nested (use the getNestedValue method)\r\n    nested = 'nested',\r\n    // If DataName does not correspond to desired value use a custom transformer\r\n    transformer = 'transformer',\r\n    // If this is a menu column\r\n    menu = 'menu',\r\n    // If an additional checkboxes is required in the table\r\n    checkbox = 'extra-checkbox',\r\n    // If this is a column with an input\r\n    input = 'input',\r\n    // Used for rendering a list in the cell\r\n    list = 'list'\r\n}\r\n","export * from './data-column-definition';\r\nexport * from './data-column-mode';\r\nexport * from './data-column-settings';\r\nexport * from './data-table-menu-item';\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-icon',\r\n  templateUrl: './icon.component.html',\r\n  styleUrls: ['./icon.component.scss']\r\n})\r\n\r\nexport class IconComponent implements OnInit {\r\n  @Input() icon = '';\r\n  @Input() iconFont: 'gctr' | 'glyphicon' | 'font-awesome-brand'\r\n    | 'font-awesome-solid' | 'material-icons' | 'material-outlined' = 'material-icons';\r\n  @Input() size: 'smaller' | 'small' | 'small-meduim' | 'medium' | 'big' = 'small';\r\n  @Input() cssClass = '';\r\n  @Input() tooltip = '';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  get iconClasses() {\r\n    let classes;\r\n    switch (this.iconFont) {\r\n      case 'font-awesome-brand': {\r\n        classes = 'fab fa-' + this.icon;\r\n        break;\r\n      }\r\n      case 'font-awesome-solid': {\r\n        classes = 'fas fa-' + this.icon;\r\n        break;\r\n      }\r\n      case 'glyphicon': {\r\n        classes = 'glyphicon glyphicon-' + this.icon;\r\n        break;\r\n      }\r\n      case 'gctr': {\r\n        classes = 'gctr-icons ' + this.icon;\r\n        break;\r\n      }\r\n      case 'material-outlined': {\r\n        classes = 'material-icons-outlined ' + this.icon;\r\n        break;\r\n      }\r\n      default: {\r\n        classes = 'material-icons';\r\n      }\r\n    }\r\n    return classes + ' ' + 'notranslate ' + ' ' + this.cssClass;\r\n  }\r\n\r\n  get showText() {\r\n    let shouldShow: boolean;\r\n    switch (this.iconFont) {\r\n      case 'font-awesome-brand': {\r\n        shouldShow = false;\r\n        break;\r\n      }\r\n      case 'font-awesome-solid': {\r\n        shouldShow = false;\r\n        break;\r\n      }\r\n      case 'glyphicon': {\r\n        shouldShow = true;\r\n        break;\r\n      }\r\n      case 'gctr': {\r\n        shouldShow = false;\r\n        break;\r\n      }\r\n      case 'material-outlined': {\r\n        shouldShow = false;\r\n        break;\r\n      }\r\n      default: {\r\n        shouldShow = true;\r\n      }\r\n    }\r\n    return shouldShow;\r\n  }\r\n}\r\n","<i [ngClass]=\"iconClasses\" [class]=\"size\" [matTooltip]=\"tooltip\">\r\n  <ng-container *ngIf=\"showText\">{{ icon }}</ng-container>\r\n</i>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IconComponent } from './icon.component';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatTooltipModule],\r\n  declarations: [IconComponent],\r\n  exports: [IconComponent]\r\n})\r\nexport class GctrIconModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-loading-card',\r\n  templateUrl: './loading-card.component.html',\r\n  styleUrls: ['./loading-card.component.scss']\r\n})\r\nexport class LoadingCardComponent implements OnInit {\r\n  @Input() cssClass = '';\r\n  @Input() internalClass = '';\r\n  @Input() size: 'small' | 'std' | 'medium' | 'big' | 'full' = 'std';\r\n  @Input() isLoading: boolean = false;\r\n  @Input() mode: 'indeterminate' | 'determinate' = 'indeterminate';\r\n  @Input() value: number = null;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  get classes() {\r\n    return this.cssClass + ' ' + this.size;\r\n  }\r\n\r\n}\r\n","<div class=\"loading-card\" [ngClass]=\"classes\">\r\n  <div class=\"loading-card-content\" [ngClass]=\"internalClass\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <gctr-progress-bar [isLoading]=\"isLoading\" [mode]=\"mode\" [value]=\"value\" class=\"loading-card-bar\"></gctr-progress-bar>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GctrCardModule } from '../card/card.module';\r\nimport { GctrProgressBarModule } from '../progress-bar/progress-bar.module';\r\n\r\nimport { LoadingCardComponent } from './loading-card.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, GctrCardModule, GctrProgressBarModule],\r\n  declarations: [LoadingCardComponent],\r\n  exports: [LoadingCardComponent]\r\n})\r\nexport class GctrLoadingCardModule { }\r\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, Event as NavigationEvent, NavigationStart } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'gctr-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss']\r\n})\r\nexport class ModalComponent implements OnInit, OnDestroy {\r\n  @Input() overlay = false;\r\n  @Input() hideCloseButton = false;\r\n  @Input() justifyInternalContent ? = 'center';\r\n  @Input() size: 'regular' | 'full' = 'regular';\r\n  @Output() close = new EventEmitter();\r\n  private routerSubscription: Subscription;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscribeRouterEvents();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.routerSubscription.unsubscribe();\r\n  }\r\n\r\n  get modalContentPosition(): string {\r\n    return `justify-content-${this.justifyInternalContent}`;\r\n  }\r\n\r\n  private subscribeRouterEvents(): void {\r\n    this.routerSubscription = this.router.events\r\n      .pipe(\r\n        filter(\r\n          (event: NavigationEvent) => event instanceof NavigationStart\r\n        )\r\n      )\r\n      .subscribe((event: NavigationStart) => {\r\n        const navTrigger = event.navigationTrigger;\r\n        const targetTrigger = 'popstate';\r\n        const isBrowserNavigation = navTrigger === targetTrigger; // Listen for browser back button press\r\n        if (isBrowserNavigation) { this.router.navigate([this.router.url]); this.close.emit(); }\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"gctr-modal\" [class.is-overlay]=\"overlay\" [ngClass]=\"size\">\r\n  <div class=\"gctr-modal-root\">\r\n    <div class=\"gctr-modal-close\" (click)=\"close.emit()\" *ngIf=\"!hideCloseButton\">\r\n      <gctr-icon icon=\"close\"></gctr-icon>\r\n    </div>\r\n    <div class=\"gctr-modal-content\">\r\n      <div class=\"flex column full-height\" [ngClass]=\"modalContentPosition\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GctrIconModule } from '../icon/icon.module';\r\nimport { ModalComponent } from './modal.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, GctrIconModule],\r\n  declarations: [ModalComponent],\r\n  exports: [ModalComponent]\r\n})\r\nexport class GctrModalModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-popover',\r\n  templateUrl: './popover.component.html',\r\n  styleUrls: ['./popover.component.scss']\r\n})\r\nexport class PopoverComponent implements OnInit {\r\n\r\n  @Input() triggerOn: 'click' | 'hover' = 'hover';\r\n  @Input() icon: string;\r\n  @Input() iconFont: string;\r\n  @Input() label: string;\r\n  @Input() text: string;\r\n  @Input() hideLabelOnMobile: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","<gctr-button\r\n  #popoverTrigger=\"mdePopoverTrigger\"\r\n  [mdePopoverTriggerFor]=\"appPopover\"\r\n  [mdePopoverTriggerOn]=\"triggerOn\"\r\n  [hideLabelOnMobile]=\"hideLabelOnMobile\"\r\n  [type]=\"'button'\"\r\n  [icon]=\"icon\"\r\n  [iconFont]=\"iconFont\"\r\n  [label]=\"label\"\r\n></gctr-button>\r\n\r\n<mde-popover #appPopover=\"mdePopover\" [mdePopoverOverlapTrigger]=\"false\">\r\n  <div [innerHTML]=\"text\"></div>\r\n</mde-popover>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MdePopoverModule } from '@material-extended/mde';\r\nimport { PopoverComponent } from './popover.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { GctrButtonModule } from '../button/button.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MdePopoverModule,\r\n    FormsModule,\r\n    GctrButtonModule\r\n  ],\r\n  declarations: [PopoverComponent],\r\n  exports: [PopoverComponent]\r\n})\r\nexport class GctrPopoverModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.scss']\r\n})\r\nexport class ProgressBarComponent implements OnInit {\r\n  @Input() isLoading = '';\r\n  @Input() mode: 'indeterminate' | 'determinate' = 'indeterminate';\r\n  /** Percentage Completed (0 - 100) */\r\n  @Input() value: number = null;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  get width() {\r\n    if (this.value) {\r\n      return this.value + '%';\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"progress-bar\" *ngIf=\"isLoading\">\r\n    <div class=\"animated\" [ngClass]=\"mode\" [ngStyle]=\"{ 'width': width }\"></div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProgressBarComponent } from './progress-bar.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ProgressBarComponent],\r\n  exports: [ProgressBarComponent]\r\n})\r\nexport class GctrProgressBarModule { }\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-rating',\r\n  templateUrl: './rating.component.html',\r\n  styleUrls: ['./rating.component.scss']\r\n})\r\nexport class RatingComponent implements OnInit {\r\n\r\n  /** Total of stars for rating */\r\n  @Input() total: number = 5;\r\n  /** Rate value for display rating */\r\n  @Input() rate: number;\r\n  /** Element read only for display rating */\r\n  @Input() readOnly: boolean = false;\r\n  /** Callback when clickin on a rate star */\r\n  @Output() callback = new EventEmitter<number>();\r\n\r\n  public array: Array<Number> = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.array = this.generateArray();\r\n  }\r\n\r\n  private generateArray(): Array<Number> {\r\n    const array = [];\r\n    const total = this.total;\r\n    for (let i = total; i >= 1; i--) { array.push(i); }\r\n    return array;\r\n  }\r\n\r\n  chooseRating(rating: number) {\r\n    if (this.readOnly) {\r\n      return;\r\n    }\r\n    this.rate = rating;\r\n    this.callback.emit(rating);\r\n  }\r\n\r\n}\r\n","<div class=\"gctr-rating\" [class.readOnly]=\"readOnly\">\r\n  <ng-container *ngFor=\"let item of array\">\r\n    <gctr-icon\r\n      class=\"star-rating\"\r\n      [icon]=\"(item <= rate) ? 'star' : 'star_border'\"\r\n      [ngClass]=\"{ 'pointer padding-right-8' : !readOnly }\"\r\n      [class.rag-amber-color]=\"item <= rate\"\r\n      (click)=\"chooseRating(item)\"\r\n      ></gctr-icon>\r\n  </ng-container>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RatingComponent } from './rating.component';\r\nimport { GctrIconModule } from '../icon/icon.module';\r\n\r\n@NgModule({\r\n  declarations: [RatingComponent],\r\n  imports: [CommonModule, GctrIconModule],\r\n  exports: [RatingComponent]\r\n})\r\nexport class GctrRatingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gctr-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-spinner></mat-spinner>","import { NgModule } from '@angular/core';\r\n\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { SpinnerComponent } from './spinner.component';\r\n\r\n@NgModule({\r\n  imports: [MatProgressSpinnerModule],\r\n  declarations: [SpinnerComponent],\r\n  exports: [SpinnerComponent]\r\n})\r\nexport class GctrSpinnerModule { }\r\n","/* Alphabetical order please */\r\n\r\nexport * from './lib/core-components/content/content.module';\r\nexport * from './lib/core-components/header/header.module';\r\nexport * from './lib/core-components/sidenav/sidenav.module';\r\nexport * from './lib/action-bar/action-bar.module';\r\nexport * from './lib/action-button/action-button.module';\r\nexport * from './lib/button/button.module';\r\nexport * from './lib/card/card.module';\r\nexport * from './lib/data-table';\r\nexport * from './gctr-design-system.module';\r\nexport * from './lib/icon/icon.module';\r\nexport * from './lib/loading-card/loading-card.module';\r\nexport * from './lib/modal/modal.module';\r\nexport * from './lib/modal/modal.component';\r\nexport * from './lib/progress-bar/progress-bar.module';\r\nexport * from './lib/popover/popover.module';\r\nexport * from './lib/rating/rating.module';\r\nexport * from './lib/spinner/spinner.module';\r\n\r\n/* Listing components as required by Angular 9 */\r\nexport * from './lib/core-components/content/content.component';\r\nexport * from './lib/core-components/header/header.component';\r\nexport * from './lib/core-components/sidenav/sidenav.component';\r\nexport * from './lib/action-bar/action-bar.component';\r\nexport * from './lib/rating/rating.component';\r\nexport * from './lib/button/button.component';\r\nexport * from './lib/icon/icon.component';\r\nexport * from './lib/loading-card/loading-card.component';\r\nexport * from './lib/progress-bar/progress-bar.component';\r\nexport * from './lib/popover/popover.component';\r\nexport * from './lib/spinner/spinner.component';\r\nexport * from './lib/card/card.component';\r\nexport * from './lib/action-button/action-button.component';\r\n\r\n\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {\r\n  CssComponent,\r\n  IconsComponent,\r\n  StructureComponent,\r\n  TypographyComponent,\r\n  DataTableComponent,\r\n  ActionsComponent,\r\n  ButtonsComponent,\r\n  ColorsComponent,\r\n  GridComponent,\r\n  CardDocumentationComponent,\r\n  RatingComponent,\r\n  ProgressBarComponent,\r\n  PopoverComponent\r\n} from './sections';\r\nimport { HeaderComponent } from './sections/header/header.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./sections/dashboard/dashboard.module').then(m => m.DashboardModule),\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'loading-card',\r\n    loadChildren: () => import('./sections/loading-card/loading-card.module').then(m => m.LoadingCardModule),\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'modal',\r\n    loadChildren: () => import('./sections/modal/modal.module').then(m => m.ModalModule),\r\n    pathMatch: 'full',\r\n  },\r\n  { path: 'actions', component: ActionsComponent },\r\n  { path: 'header', component: HeaderComponent },\r\n  { path: 'buttons', component: ButtonsComponent },\r\n  { path: 'colors', component: ColorsComponent },\r\n  { path: 'grid', component: GridComponent },\r\n  { path: 'css', component: CssComponent },\r\n  { path: 'icons', component: IconsComponent },\r\n  { path: 'structure', component: StructureComponent },\r\n  { path: 'typography', component: TypographyComponent },\r\n  { path: 'data-table', component: DataTableComponent },\r\n  { path: 'card', component: CardDocumentationComponent },\r\n  { path: 'rating', component: RatingComponent },\r\n  { path: 'progress-bar', component: ProgressBarComponent },\r\n  { path: 'popover', component: PopoverComponent },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,\r\n    // { enableTracing: true, } // <-- debugging purposes only\r\n  )],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DocumentationService } from './core/documentation/documentation.service';\r\nimport { ContentComponent } from './layout';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'GctrDesignSystem';\r\n  @ViewChild('content') content: ContentComponent;\r\n  constructor(private startup: DocumentationService, private router: Router) {}\r\n  ngOnInit() {\r\n    // If there is no startup data received (maybe an error!)\r\n    // navigate to error route\r\n    if (!this.startup.startupData) {\r\n      console.error('no startupdata');\r\n    }\r\n    // This is for the sidenav content - to scroll to top when navigation occurs\r\n    this.router.events.subscribe((evt) => {\r\n      if (!(evt instanceof NavigationEnd)) {\r\n          return;\r\n      }\r\n      const scrollToTop = window.setInterval(function () {\r\n          const pos = window.pageYOffset;\r\n          if (pos > 0) {\r\n              window.scrollTo(0, pos - 20); // how far to scroll on each step\r\n          } else {\r\n              window.clearInterval(scrollToTop);\r\n          }\r\n      }, 4); // how fast to scroll (this equals roughly 60 fps)\r\n  });\r\n  }\r\n\r\n  toggleNav() {\r\n    this.content.drawer.toggle();\r\n  }\r\n}\r\n","<app-header (toggleNav)=\"toggleNav()\"></app-header>\r\n<app-content #content>\r\n    <router-outlet></router-outlet>\r\n</app-content>\r\n<app-footer></app-footer>","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport {\r\n  GridComponent,\r\n  ColorsComponent,\r\n  TypographyComponent,\r\n  ButtonsComponent,\r\n  ActionsComponent,\r\n  IconsComponent,\r\n  StructureComponent,\r\n  CssComponent,\r\n  DataTableComponent,\r\n  CardDocumentationComponent,\r\n  RatingComponent,\r\n  ProgressBarComponent,\r\n  PopoverComponent\r\n} from './sections';\r\nimport { DocumentationService } from './core';\r\nimport { HeaderComponent as HeaderDemoComponent } from './sections/header/header.component';\r\nimport { HeaderComponent, FooterComponent, ContentComponent } from './layout';\r\nimport { SharedModule } from './shared/shared.modules';\r\n\r\nexport function startupServiceFactory(startupService: DocumentationService): Function {\r\n  return () => startupService.load();\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GridComponent,\r\n    ColorsComponent,\r\n    TypographyComponent,\r\n    DataTableComponent,\r\n    ButtonsComponent,\r\n    ActionsComponent,\r\n    IconsComponent,\r\n    CssComponent,\r\n    HeaderDemoComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    StructureComponent,\r\n    ContentComponent,\r\n    CardDocumentationComponent,\r\n    RatingComponent,\r\n    ProgressBarComponent,\r\n    PopoverComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    SharedModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [\r\n    DocumentationService,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: startupServiceFactory,\r\n      deps: [DocumentationService],\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClipboardService {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  copyToClipboard(item: string) {\r\n    document.addEventListener('copy', (e: ClipboardEvent) => {\r\n      e.clipboardData.setData('text/plain', (item));\r\n      e.preventDefault();\r\n      document.removeEventListener('copy', null);\r\n    });\r\n    document.execCommand('copy');\r\n    this.snackBar.open('Copied To Clipboard', '', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport interface Documentation {\r\n  name: string;\r\n  kind: number;\r\n  id: number;\r\n  groups: Group[];\r\n  flags: Flags;\r\n  children: Child[];\r\n}\r\n\r\nexport interface Group {\r\n  title: string;\r\n  kind: number;\r\n  children: number[];\r\n}\r\n\r\nexport interface Flags {\r\n  isExported?: boolean;\r\n}\r\n\r\nexport interface Child {\r\n  comment?: Comment;\r\n  children: Child[];\r\n  type: Type;\r\n  decorators: Decorator[];\r\n  flags: Flags;\r\n  groups: Group[];\r\n  id: number;\r\n  kind: number;\r\n  kindString: string;\r\n  name: string;\r\n  getSignature?: Signature[];\r\n  setSignature?: Signature[];\r\n  signatures: Signature[];\r\n  sources: Source[];\r\n}\r\n\r\nexport interface Signature {\r\n  comment?: Comment;\r\n  flags: Flags;\r\n  id: number;\r\n  kind: number;\r\n  kindString: string;\r\n  name: '__set' | '__get';\r\n  parameters: Parameter[];\r\n  type: Type;\r\n}\r\n\r\nexport interface Parameter {\r\n  flags: Flags;\r\n  id: number;\r\n  kind: number;\r\n  kindString: string;\r\n  name: string;\r\n  type: Type;\r\n}\r\n\r\nexport interface Comment {\r\n  shortText: string;\r\n}\r\n\r\nexport interface Decorator {\r\n  arguments: Arguements;\r\n  name: string;\r\n  type: Type;\r\n}\r\nexport interface Arguements {\r\n  obj: string;\r\n}\r\nexport interface Type {\r\n  type: 'intrinsic' | 'union' | 'EventEmitter' | string;\r\n  name?: string;\r\n  types: Type[];\r\n  value: string;\r\n  typeArguments?: Type[];\r\n  elementType: {\r\n    type: string;\r\n    name: string;\r\n  };\r\n}\r\n\r\nexport interface Source {\r\n  character: number;\r\n  fileName: string;\r\n  line: number;\r\n}\r\n\r\n@Injectable()\r\nexport class DocumentationService {\r\n  private _documentation: Documentation;\r\n  constructor(private http: HttpClient) {}\r\n  load(): Promise<any> {\r\n    this._documentation = null;\r\n    return this.http\r\n      .get<Documentation>('assets/docs.json')\r\n      .pipe(map((res: Documentation) => res))\r\n      .toPromise()\r\n      .then((data: any) => (this._documentation = data))\r\n      .catch((err: any) => Promise.resolve());\r\n  }\r\n  get startupData(): any {\r\n    return this._documentation;\r\n  }\r\n  public getDocs(componentName: string): Child {\r\n    return this.startupData.children.filter(x => x.name === componentName)[0];\r\n  }\r\n}\r\n","export * from './documentation/documentation.service';\r\n","import { Component, OnInit, Input, ViewChild, OnDestroy } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { MatDrawer } from '@angular/material/sidenav';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.scss']\r\n})\r\nexport class ContentComponent implements OnInit, OnDestroy {\r\n  smallScreen: boolean;\r\n\r\n  @ViewChild('drawer', {static: true}) drawer: MatDrawer;\r\n\r\n  breakpointsSubscription: Subscription;\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n\r\n  ngOnInit() {\r\n    this.breakpointsSubscription = this.breakpointObserver\r\n      .observe([\r\n        Breakpoints.HandsetLandscape,\r\n        Breakpoints.HandsetPortrait,\r\n        Breakpoints.TabletLandscape,\r\n        Breakpoints.TabletPortrait\r\n      ])\r\n      .subscribe(result => {\r\n        this.smallScreen = result.matches;\r\n        if (this.smallScreen) {\r\n          this.drawer.close();\r\n        } else {\r\n          this.drawer.open();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.breakpointsSubscription.unsubscribe();\r\n  }\r\n}\r\n","<mat-sidenav-container class=\"gctr-wrapper\" autosize>\r\n  <mat-sidenav #drawer class=\"gctr-sidenav\" [mode]=\"smallScreen ? 'over' : 'side'\" [fixedInViewport]=\"true\"\r\n    [fixedTopGap]=\"64\">\r\n    <nav>\r\n      <ul>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/grid\">Grid</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/typography\">Typography</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/header\">Header</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/structure\">Structure</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/colors\">Colors</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/icons\">Icons</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/card\">Card</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/loading-card\">Loading Card</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/progress-bar\">Progress Bar</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/actions\">Action buttons</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/buttons\">Buttons</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/data-table\">Data Table</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/modal\">Modal</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/popover\">Popover</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/rating\">Rating</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/css\">CSS Helper Classes</a></li>\r\n      </ul>\r\n    </nav>\r\n  </mat-sidenav>\r\n\r\n  <div class=\"gctr-content\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Output() toggleNav = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<gctr-header>\r\n  <div class=\"flex align-items-center\">\r\n    <a class=\"block margin-right-10\" routerLink=\"/\">\r\n      <img src=\"assets/go-contractor.svg\" alt=\"Go Contractor\" width=\"200px\" class=\"block\" />\r\n    </a> \r\n    <gctr-icon icon=\"dehaze\" class=\"pointer flex margin-right-16\" (click)=\"toggleNav.emit()\">\r\n    </gctr-icon>\r\n  </div>\r\n  Design System\r\n</gctr-header>","export * from './content/content.component';\r\nexport * from './footer/footer.component';\r\nexport * from './header/header.component';\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-actions',\r\n  templateUrl: './actions.component.html',\r\n  styleUrls: ['./actions.component.scss']\r\n})\r\nexport class ActionsComponent implements OnInit {\r\n  public componentName = 'ActionButtonComponent';\r\n  public module = 'GctrActionButtonModule';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-documentation [componentName]=\"componentName\" [module]=\"module\" [codeTitle]=\"'action-button.html'\">  \r\n    <p>Standard button boxes with actions.</p>\r\n    <div class=\"flex-justify-align-center\">\r\n        <gctr-action-button label=\"Selection Box Name\" size=\"small\" icon=\"alternate_email\" class=\"margin-16\"></gctr-action-button>\r\n        <gctr-action-button label=\"Selection Box Name\" size=\"small\" icon=\"person\" class=\"margin-16\"></gctr-action-button>\r\n        <gctr-action-button label=\"Selection Box Name\" size=\"small\" icon=\"cloud_download\" class=\"margin-16\"></gctr-action-button>\r\n    </div>\r\n    <div class=\"flex-justify-align-center margin-top-32\">\r\n        <gctr-action-button label=\"Selection Box Name\" icon=\"alternate_email\" class=\"margin-16\"></gctr-action-button>\r\n        <gctr-action-button label=\"Selection Box Name\" icon=\"person\" class=\"margin-16\"></gctr-action-button>\r\n        <gctr-action-button label=\"Selection Box Name\" icon=\"cloud_download\" class=\"margin-16\"></gctr-action-button>\r\n    </div>\r\n</app-documentation>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ButtonsService } from '../../services/buttons.service';\r\nimport { Buttons } from 'src/app/models/buttons';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\n\r\n@Component({\r\n  selector: 'app-buttons',\r\n  templateUrl: './buttons.component.html',\r\n  styleUrls: ['./buttons.component.scss'],\r\n  providers: [ ButtonsService ]\r\n})\r\nexport class ButtonsComponent implements OnInit {\r\n  public componentName = 'ButtonComponent';\r\n  public module = 'GctrButtonModule';\r\n  public buttons: Array<Array<Buttons>> = [];\r\n  public darkBackground: boolean;\r\n  constructor(\r\n    private buttonsService: ButtonsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buttons.push(this.buttonsService.getButtons('main', 'primary', 'Main'));\r\n    this.buttons.push(this.buttonsService.getButtons('main', 'secondary', 'Main'));\r\n    this.buttons.push(this.buttonsService.getButtons('stroke', 'primary', 'Stroke'));\r\n    this.buttons.push(this.buttonsService.getButtons('stroke', 'secondary', 'Stroke'));\r\n    this.buttons.push(this.buttonsService.getButtons('white', '', 'White'));\r\n    this.buttons.push(this.buttonsService.getButtons('basic', '', 'Basic'));\r\n    this.buttons.push(this.buttonsService.getButtons('basic', 'primary', 'Basic'));\r\n    this.buttons.push(this.buttonsService.getButtons('basic', 'secondary', 'Basic'));\r\n  }\r\n\r\n  public handleSlideChange(event: MatSlideToggleChange): void {\r\n    this.darkBackground = event.checked;\r\n  }\r\n\r\n}\r\n","<app-documentation [componentName]=\"componentName\" [module]=\"module\" [codeTitle]=\"'button.html'\">\r\n  <p>Button options availiable in the library.</p>\r\n  <mat-slide-toggle (change)=\"handleSlideChange($event)\" class=\"margin-y-16\">Dark Mode</mat-slide-toggle>\r\n  <mat-divider></mat-divider>\r\n  <div [ngClass]=\"darkBackground ? 'black-bgcolor' : 'white-bgcolor'\">\r\n      <div *ngFor=\"let button of buttons\" class=\"flex column elements-margin-right\">\r\n          <div class=\"flex wrap\">\r\n            <gctr-button class=\"margin-y-8 margin-x-8\" *ngFor=\"let b of button\" design=\"{{ b.design }}\" color=\"{{ b.color }}\" label=\"{{ b.label }}\"\r\n              icon=\"{{ b.icon }}\" iconFont=\"{{ b.iconFont }}\" tooltip=\"{{ b.tooltip }}\" disabled=\"{{ b.disabled }}\"></gctr-button>\r\n          </div>\r\n          <mat-divider></mat-divider>\r\n      </div>\r\n      <div class=\"flex row\">\r\n        <gctr-button design=\"float\" color=\"primary\" icon=\"edit\" cssClass=\"relative\" tooltip=\"Edit\" class=\"padding-top-36 padding-left-36 inline-block\"></gctr-button>\r\n        <gctr-button design=\"float\" color=\"secondary\" icon=\"save\" cssClass=\"relative\" tooltip=\"Save\" class=\"padding-top-36 padding-left-36 inline-block\"></gctr-button>\r\n        <gctr-button design=\"float-cancel\" icon=\"close\" cssClass=\"relative\" tooltip=\"Cancel\" style=\"padding-left:100px\" class=\"padding-top-36 inline-block\"></gctr-button>\r\n      </div>\r\n  </div>\r\n</app-documentation>","import { Component } from '@angular/core';\r\nimport { ClipboardService } from 'src/app/core/clipboard/clipboard.service';\r\n\r\n@Component({\r\n  selector: 'app-colors',\r\n  templateUrl: './colors.component.html',\r\n  styleUrls: ['./colors.component.scss']\r\n})\r\nexport class ColorsComponent {\r\n  public title = 'icon.html';\r\n  public componentName = 'IconComponent';\r\n  public module = 'GctrIconModule';\r\n  public showCode = false;\r\n\r\n  constructor(private clipboard: ClipboardService) {}\r\n\r\n  copyToClipboard(item: string): void {\r\n    this.clipboard.copyToClipboard(item);\r\n  }\r\n}\r\n","<gctr-card class=\"relative\">\r\n    <gctr-icon icon=\"code\" class=\"pointer absolute top-16 right-16\" (click)=\"showCode = !showCode\">code</gctr-icon>\r\n    <h1 class=\"default margin-top-0\">Color Pallet</h1>\r\n    <br />\r\n\r\n    <p>Theme default colors</p>\r\n    <div class=\"color-palette\">\r\n        <div class=\"items-block\">\r\n            <span class=\"primary-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('#2776AA')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">Primary color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: #2776AA</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $PMain</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --PMain</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"items-block\">\r\n            <span class=\"secondary-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('#1c880c')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">Secondary color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: #1c880c</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $SMain</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --SMain</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br />\r\n\r\n    <p>Grey scale colors</p>\r\n    <div class=\"color-palette\">\r\n        <div class=\"items-block\">\r\n            <span class=\"black-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('#212121')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">Black color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: #212121</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $Black</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --Black</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"items-block\">\r\n            <span class=\"grey-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('#757575')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">Grey color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: #757575</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $Grey</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --Grey</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"items-block\">\r\n            <span class=\"disable-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('#BDBDBD')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">Disable color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: #BDBDBD</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $Disable</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --Disable</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"items-block\">\r\n            <span class=\"ripple-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('#E0E0E0')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">Ripple color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: #E0E0E0</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $Ripple</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --Ripple</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"items-block\">\r\n            <span class=\"hover-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('#F2F2F2')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">Hover color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: #F2F2F2</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $Hover</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --Hover</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"items-block\">\r\n            <span class=\"bg-std pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('#F8F8F8')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">Background default color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: #F8F8F8</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $BackgroundDefault</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --BackgroundDefault</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br />\r\n\r\n    <p>Rag colors - Red, Amber and Green</p>\r\n    <div class=\"color-palette\">\r\n        <div class=\"items-block\">\r\n            <span class=\"rag-red-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('#F44336')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">RAG Red color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: #F44336</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $RagRed</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --RagRed</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"items-block\">\r\n            <span class=\"rag-red-light-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('rgba(244, 67, 54, 0.1)')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">RAG Red light color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: ---</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $RagRedLight</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --RagRedLight</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"items-block\">\r\n            <span class=\"rag-amber-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('#FFC108')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">RAG Amber color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: #FFC108</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $RagAmber</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --RagAmber</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"items-block\">\r\n            <span class=\"rag-amber-light-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('rgba(255, 193, 8, 0.1)')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">RAG Amber light color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: ---</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $RagAmbeLightr</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --RagAmberLight</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"items-block\">\r\n            <span class=\"rag-green-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('#348424')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">RAG Green color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: #348424</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $RagGreen</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --RagGreen</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"items-block\">\r\n            <span class=\"rag-green-light-bgcolor pointer\" matTooltip=\"Copy to clipboard\" (click)=\"copyToClipboard('rgba(28, 136, 12, 0.1)')\"></span>\r\n            <div class=\"content\">\r\n                <p class=\"bold margin-top-0\">RAG Green light color</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">RGB: ---</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">SCSS: $RagGreenLight</p>\r\n                <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">Var: --RagGreenLight</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</gctr-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-css',\r\n  templateUrl: './css.component.html',\r\n  styleUrls: ['./css.component.scss']\r\n})\r\nexport class CssComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<gctr-card>\r\n    <h1 class=\"default margin-top-0\">CSS Helper Classes</h1>\r\n    <p>CSS classes to help write consistent and maintanable code, based on Google Style Guide patterns and SMACSS.</p>\r\n    \r\n    <h3 class=\"margin-top-32\">Flexbox structure</h3>    \r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        .flex                       [ set a div to display flex; use .flex-important if needed ]\r\n        .flex-grow                  [ add flex = 1 to a div ]\r\n        .flex-grow-x                [ add flex property to a div, where x is a number from 1 to 10 ]\r\n        .flex-x                     [ add flex property to a div, where x is a number from 1 to 10 ]\r\n        .flex-basis-x-pc            [ add flex basis property to a div, where x is 50 or 100 (per cent) ]\r\n        .column                     [ add this class to set direction as column ]\r\n        .column-tablet              [ add this class to set direction as column in tablet resolution ]\r\n        .column-mobile              [ add this class to set direction as column in mobile resolution ]\r\n        .column-mobile-small        [ add this class to set direction as column in mobile small resolution ]\r\n        .row                        [ add this class to set direction as row ]\r\n        .row-tablet                 [ add this class to set direction as row in tablet resolution ]\r\n        .row-mobile                 [ add this class to set direction as row in mobile resolution ]\r\n        .row-mobile-small           [ add this class to set direction as row in mobile small resolution ]\r\n        .wrap                       [ add this class to set flex wrap ]\r\n        .wrap-tablet                [ add this class to set flex wrap in tablet resolution ]\r\n        .wrap-mobile                [ add this class to set flex wrap in mobile resolution ]\r\n        .wrap-mobile-small          [ add this class to set flex wrap in mobile small resolution ]\r\n        ```\r\n    </markdown>\r\n\r\n    <h3 class=\"margin-top-32\">Flexbox Alignment</h3>    \r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        .align-items-x              [ add this class to align items, where x = center|stretch|start|end ]\r\n        .justify-content-x          [ add this class to justify content, where x = space-around|space-between|center|start|end ]\r\n        .flex-justify-align-center  [ add display flex, justify content center and align items center ]\r\n        .align-items-middle         [ align an element in the middle of the page with view height and view width ]\r\n        .button-wrapper             [ align two buttons in opposit directions and standard margin top, to be used in the end of forms ]\r\n        .va-middle                  [ align items to middle using vertical-align ]\r\n        ```\r\n    </markdown>\r\n    \r\n    <h3 class=\"margin-top-32\">Standard positions, spacings and colors</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        .radius-std                                 [ add border radius standard to an element]\r\n        .bg-std                                     [ add background standard to an element]\r\n        .shadow-std                                 [ add box shadow standard to an element]\r\n        .margin-std                                 [ add standard margins on top, bottom, left and right of an element ]\r\n        .margin-minus-std                           [ add negative standard margins on top, bottom, left and right of an element ]\r\n        .margin-[top|bottom|left|right]-std         [ add standard margin to an element ]\r\n        .margin-minus-[top|bottom|left|right]-std   [ add negative standard margin to an element ]\r\n        .padding-std                                [ add standard padding on top, bottom, left and right of an element ]\r\n        .padding-[top|bottom|left|right]-std        [ add standard padding to an element ]\r\n        .[top|bottom|left|right]-std                [ set position standard to an element ]   \r\n        ```\r\n    </markdown>\r\n    \r\n    <h3 class=\"margin-top-32\">Cursor</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        .default        [ add cursor default to an element]\r\n        .pointer        [ add cursor pointer to an element]\r\n        .notallowed     [ add cursor notallowed to an element]\r\n        .move           [ add cursor move to an element]\r\n        .no-events      [ add no pointer events to an element]\r\n        ```\r\n    </markdown>\r\n    \r\n    <h3 class=\"margin-top-32\">Displays</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        .hide, .hidden  [ add display none to an element ]                \r\n        .show           [ add display block to an element ]                \r\n        .inline         [ add display inline to an element ]                \r\n        .inline-block   [ add display inline-block to an element ]                \r\n        .grid           [ add display grid to an element ]             \r\n        .table          [ add display table to an element ]\r\n        .mobile-hide    [ add display none to an element on mobile resolution ]\r\n        .tablet-hide    [ add display none to an element on tablet resolution ]\r\n        .desktop-hide   [ add display none to an element on desktop resolution ]\r\n        ```\r\n    </markdown>\r\n    \r\n    <h3 class=\"margin-top-32\">Visibility</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        .visibility-hidden      [ add visibility hidden to an element ]\r\n        .visibility-visible     [ add visibility visible to an element ]\r\n        ```\r\n    </markdown>\r\n    \r\n    <h3 class=\"margin-top-32\">Margins</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        .margin-[x]                                 [ add top, bottom, left and right margins to an element, where x = a number from 0 to 60 multiples of 2 ]   \r\n        .margin-minus-[x]                           [ add negative top, bottom, left and right margins to an element, where x = a number from 0 to 60 multiples of 2 ]   \r\n        .margin-[top|bottom|left|right]-[x]         [ add margin to an element, where x = \"auto\" or = a number from 0 to 60 multiples of 2 ]   \r\n        .margin-minus-[top|bottom|left|right]-[x]   [ add negative margin to an element, where x = \"auto\" or = a number from 0 to 60 multiples of 2 ]   \r\n        .margin-[top|right]-minus-[x]               [ add negative margin to an element, where x = a number from 0 to 60 multiples of 2 ]   \r\n        .margin-y-[x]                               [ add margins top and bottom to an element, where x = \"auto\" or = a number from 0 to 60 multiples of 2 ]   \r\n        .margin-y-minus-[x]                         [ add negative top and bottom margins to an element, where x = \"auto\" or = a number from 0 to 60 multiples of 2 ]   \r\n        .margin-x-[x]                               [ add margins left and right to an element, where x = a number from 0 to 60 multiples of 2 ]       \r\n        .margin-x-minus-[x]                         [ add negative margins left and right to an element, where x = a number from 0 to 60 multiples of 2 ]       \r\n        .elements-margin-[right|left]               [ add a standard margin right or left to all elements inside a div ]\r\n        ```\r\n    </markdown>\r\n    \r\n    <h3 class=\"margin-top-32\">Paddings</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        .padding-[x]                            [ add padding to an element, where x = a number from 0 to 60 multiples of 4]   \r\n        .padding-[top|bottom|left|right]-[x]    [ add padding to an element, where x = a number from 0 to 60 multiples of 4]   \r\n        .padding-y-[x]                          [ add margins top and bottom to an element, where x = a number from 0 to 60 multiples of 4]   \r\n        .padding-x-[x]                          [ add margins left and right to an element, where x = a number from 0 to 60 multiples of 4 ]\r\n    ```\r\n    </markdown>\r\n    \r\n    <h3 class=\"margin-top-32\">Sizes</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        .view-width                             [ add width of view width to an element ]   \r\n        .full-width                             [ add width, max width and min width of 100% to an element ]   \r\n        .width-[x|50-pc|100-pc]                 [ add width to an element, where x = a number from 5 to 750 multiples of 5 ]   \r\n        .max-width-[x|50-pc|90-pc|100-pc]       [ add max width to an element, where x = a number from 5 to 750 multiples of 5, or 1024 or 1200 ]   \r\n        .min-width-[x|50-pc|100-pc]             [ add min width to an element, where x = a number from 5 to 750 multiples of 5 ]   \r\n        .view-height                            [ add height of view height to an element ]   \r\n        .full-height                            [ add height, max height and min height of 100% to an element ]   \r\n        .height-[x|100-pc]                      [ add height to an element, where x = a number from 5 to 750 multiples of 5 ]   \r\n        .max-height-[x|100-pc]                  [ add max height to an element, where x = a number from 5 to 750 multiples of 5 ]   \r\n        .min-height-[x]                         [ add min height to an element, where x = a number from 5 to 750 multiples of 5 ]   \r\n        ```\r\n    </markdown>\r\n\r\n    <h3 class=\"margin-top-32\">Positions</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        .relative                     [ set position relative to an element ]    \r\n        .absolute                     [ set position absolute to an element ]    \r\n        .fixed                        [ set position fixed to an element ]    \r\n        .absolute-right               [ set position absolute with right = 0 to an element ]   \r\n        .absolute-top-right           [ set position absolute with top = 0 and right = 0 to an element ]   \r\n        .absolute-top-left            [ set position absolute with top = 0 and left = 0 to an element ]  \r\n        .[top|bottom|left|right]-[x]  [ set position to an element, where x = a number from 0 to 60, multiples of 4 ]   \r\n        ```\r\n    </markdown>\r\n\r\n    <h3 class=\"margin-top-32\">Text, border and background colors</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        .primary-color        | .secondary-color          [ setting theme colors to elements ]\r\n        .primary-bgcolor      | .secondary-bgcolor        [ setting background theme colors to elements ]\r\n        .primary-border-color | .secondary-border-color   [ setting border theme colors to elements ]\r\n\r\n        .black-color          | .grey-color         | .disable-color         | .ripple-color         | .hover-color          [ set grey scale colors to an element ]\r\n        .black-bgcolor        | .grey-bgcolor       | .disable-bgcolor       | .ripple-bgcolor       | .hover-bgcolor        [ set grey scale background colors to an element ]\r\n        .black-border-color   | .grey-border-color  | .disable-border-color  | .ripple-border-color  | .hover-border-color   [ set grey scale border colors to an element ]\r\n\r\n        .rag-red-color        | .rag-amber-color        | .rag-green-color          [ set rag colors to an element ]\r\n        .rag-red-bgcolor      | .rag-amber-bgcolor      | .rag-green-bgcolor        [ set rag background colors to an element ]\r\n        .rag-red-border-color | .rag-amber-border-color | .rag-green-border-color   [ set rag border colors to an element ]\r\n\r\n        .rag-red-light-color        | .rag-amber-light-color        | .rag-green-light-color          [ set rag light colors to an element ]\r\n        .rag-red-light-bgcolor      | .rag-amber-light-bgcolor      | .rag-green-light-bgcolor        [ set rag light background colors to an element ]\r\n        .rag-red-light-border-color | .rag-amber-light-border-color | .rag-green-light-border-color   [ set rag light border colors to an element ]\r\n\r\n        .white-color          [ set white color to an element ]   \r\n        .feedback-color       [ set feedback color to an element ]\r\n        ```\r\n    </markdown>\r\n\r\n    <h3 class=\"margin-top-32\">Typography classes</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        .text[x]                [ font-size to an element, where x = a number between 8 and 100 multiples of 2 ]   \r\n        .bold                   [ set bold text to an element ]   \r\n        .bold-hover             [ set bold text to an element on hover ]  \r\n        .nobold                 [ remove bold text of an element ]   \r\n        .nobold-hover           [ remove bold text of an element on hover ]  \r\n        .italic                 [ set italic text to an element ]   \r\n        .italic-hover           [ set italic text to an element on hover ]   \r\n        .noitalic               [ remove italic text of an element ]   \r\n        .noitalic-hover         [ remove italic text of an element on hover ]   \r\n        .underline              [ set underline text to an element ]   \r\n        .underline-hover        [ set underline text to an element on hover ]   \r\n        .nounderline            [ remove underline text of an element ]   \r\n        .nounderline-hover      [ remove underline text of an element on hover ]   \r\n        .uppercase              [ set uppercase text to an element ]   \r\n        .uppercase-hover        [ set uppercase text to an element on hover ]   \r\n        .lowercase              [ set lowercase text to an element ]   \r\n        .lowercase-hover        [ set lowercase text to an element on hover ]   \r\n        .break-word             [ set break-word text to an element ]   \r\n        .break-newlines         [ command element to obey newlines ('\\r\\n') ]\r\n        .no-wrap                [ set white space no-wrap text to an element ]   \r\n        .ellipsis               [ set ellipsis to an element ]   \r\n        ```\r\n    </markdown>\r\n\r\n    <h3 class=\"margin-top-32\">Breakpoints for media queries</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n        ```html\r\n        $media-mobile-smaller       [  400px  ]\r\n        $media-mobile-small         [  500px  ]\r\n        $media-mobile               [  700px  ]\r\n        $media-tablet-min           [  701px  ]\r\n        $media-tablet               [  960px  ]\r\n        $media-desktop-min          [  961px  ]\r\n        $media-desktop-small        [  1100px ]\r\n        $media-desktop-small-min    [  1101px ]\r\n        $media-desktop              [  1440px ]\r\n        ```\r\n    </markdown>\r\n    \r\n</gctr-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n    <h1>Design System | GoContractor</h1>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DataColumnMode, DataTableMenuItem, DataTableSettings } from 'projects/gctr-design-system/src/public_api';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { FormControl } from '@angular/forms';\r\n\r\ninterface MockData {\r\n  name: string;\r\n  age: number;\r\n  car: string;\r\n  diet: {\r\n    vegetarian: boolean;\r\n  };\r\n  mandatory: boolean;\r\n  extraText: string;\r\n}\r\nconst MOCK_DATA: MockData[] = [\r\n  {\r\n    name: 'michael',\r\n    age: 19,\r\n    car: 'opal',\r\n    diet: {\r\n      vegetarian: true\r\n    },\r\n    mandatory: true,\r\n    extraText: ''\r\n  },\r\n  {\r\n    name: 'sarah',\r\n    age: 27,\r\n    car: 'audi',\r\n    diet: {\r\n      vegetarian: false\r\n    },\r\n    mandatory: true,\r\n    extraText: 'Woah, cool data-table!'\r\n  },\r\n  {\r\n    name: 'george',\r\n    age: 21,\r\n    car: 'volkswagon',\r\n    diet: {\r\n      vegetarian: false\r\n    },\r\n    mandatory: false,\r\n    extraText: ''\r\n  },\r\n  {\r\n    name: 'michelle',\r\n    age: 18,\r\n    car: 'range rover',\r\n    diet: {\r\n      vegetarian: true\r\n    },\r\n    mandatory: false,\r\n    extraText: 'Here is some additional text.'\r\n  },\r\n  {\r\n    name: 'philip',\r\n    age: 25,\r\n    car: 'mercedes',\r\n    diet: {\r\n      vegetarian: true\r\n    },\r\n    mandatory: true,\r\n    extraText: ''\r\n  },\r\n  {\r\n    name: 'ruth',\r\n    age: 28,\r\n    car: 'nissan',\r\n    diet: {\r\n      vegetarian: true\r\n    },\r\n    mandatory: false,\r\n    extraText: ''\r\n  },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-section-data-table',\r\n  templateUrl: './data-table.component.html',\r\n  styleUrls: ['./data-table.component.scss']\r\n})\r\nexport class DataTableComponent implements OnInit {\r\n  // Documentation Properties\r\n  public showBasicCode: boolean;\r\n  public showAdvancedCode: boolean;\r\n  public componentName = 'GctrDataTableComponent';\r\n  public module = 'GctrDataTableModule';\r\n  public classes = [\r\n    'DataColumnDefinition',\r\n    'DataColumnMode',\r\n    'DataTableSettings',\r\n    'DataColumnCheckboxSettings',\r\n    'DataColumnInputSettings',\r\n    'DataTableMenuItem'\r\n  ];\r\n\r\n  // Examples Properties\r\n  public basicColumnsOptions = ['checkbox', 'name', 'diet.vegetarian', 'age', 'car', 'menu'];\r\n  public basicColumns = new FormControl(['checkbox', 'name', 'diet.vegetarian', 'age', 'car', 'menu']);\r\n  public exampleDataSource: MatTableDataSource<MockData> = new MatTableDataSource(MOCK_DATA);\r\n  public exampleSelectionModel: SelectionModel<MockData> = new SelectionModel(true /*Multiple*/);\r\n  public menu: DataTableMenuItem<MockData>[] = [\r\n    {\r\n      icon: 'visibility',\r\n      label: 'View',\r\n      disabled: (row: MockData) => false,\r\n      action: (row: MockData) => alert(row.name)\r\n    }\r\n  ];\r\n  public get basicExampleDataTableSettings(): DataTableSettings<MockData> {\r\n    return ({\r\n      displayedColumns: this.basicColumns.value,\r\n      columnDefinitions: [\r\n        {\r\n          title: 'Name',\r\n          columnName: 'name'\r\n        },\r\n        {\r\n          title: 'Age',\r\n          columnName: 'age'\r\n        },\r\n        {\r\n          title: 'Car',\r\n          columnName: 'car'\r\n        },\r\n        {\r\n          title: 'Veggie',\r\n          columnName: 'diet.vegetarian',\r\n          mode: DataColumnMode.nested\r\n        }\r\n      ],\r\n      dataSource: this.exampleDataSource,\r\n      menu: this.menu,\r\n      clickableRows: true\r\n    });\r\n  }\r\n  public get inputsExampleDataTableSettings(): DataTableSettings<MockData> {\r\n    return ({\r\n      displayedColumns: ['checkbox', 'name', 'extra_checkbox', 'input'],\r\n      columnDefinitions: [\r\n        {\r\n          title: 'Name',\r\n          columnName: 'name',\r\n          customHeaderClassLg: 'max-width-180',\r\n          customCellClassLg: 'max-width-180',\r\n          handleCellClick: (row: MockData) => this.exampleSelectionModel.toggle(row)\r\n        },\r\n        {\r\n          title: 'Mandatory',\r\n          columnName: 'extra_checkbox',\r\n          mode: DataColumnMode.checkbox,\r\n          disableFormField: () => false,\r\n          checkboxSettings: {\r\n            checkboxChecked: (item: MockData) => item.mandatory,\r\n            checkboxChange: (event: MatCheckboxChange, item: MockData) => {\r\n              item.mandatory = event.checked;\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: 'Extra Text',\r\n          columnName: 'input',\r\n          mode: DataColumnMode.input,\r\n          disableFormField: () => false,\r\n          inputSettings: {\r\n            inputChange: (event: KeyboardEvent, row: MockData) => {\r\n              const target = <HTMLInputElement>event.target;\r\n              row.extraText = target.value;\r\n            },\r\n            inputValue: (row: MockData) => row.extraText\r\n          }\r\n        }\r\n      ],\r\n      dataSource: this.exampleDataSource,\r\n      menu: this.menu,\r\n      hideSelectedRowHighlighting: true\r\n    });\r\n  }\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-documentation [componentName]=\"componentName\" [module]=\"module\" [codeTitle]=\"'data-table/data-table.html'\"\r\n  [classes]=\"classes\" [hideSelector]=\"false\">\r\n  <div class=\"flex row align-items-center\">\r\n    <h2 class=\"margin-y-16 margin-right-16\">Basic</h2>\r\n    <mat-icon class=\"pointer\" (click)=\"showBasicCode = !showBasicCode\">code</mat-icon>\r\n  </div>\r\n  <mat-form-field>\r\n    <mat-label>Columns</mat-label>\r\n    <mat-select [formControl]=\"basicColumns\" multiple>\r\n      <mat-option *ngFor=\"let column of basicColumnsOptions\" [value]=\"column\">{{column}}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <mat-card class=\"gctr-card\">\r\n    <ng-template [ngIf]=\"!showBasicCode\" [ngIfElse]=\"basicCode\">\r\n      <gctr-data-table [dataTableSettings]=\"basicExampleDataTableSettings\"\r\n        [(selectionModel)]=\"exampleSelectionModel\">\r\n      </gctr-data-table>\r\n    </ng-template>\r\n    <ng-template #basicCode>\r\n      <app-code [title]=\"'data-table/basic.ts'\"></app-code>\r\n    </ng-template>\r\n  </mat-card>\r\n  <ul>\r\n    <li *ngFor=\"let item of exampleSelectionModel.selected\">{{item.name}} - {{item.mandatory}} - {{item.extraText}}</li>\r\n  </ul>\r\n\r\n  <div class=\"flex row align-items-center\">\r\n    <h2 class=\"margin-y-16 margin-right-16\">Advanced</h2>\r\n    <mat-icon class=\"pointer\" (click)=\"showAdvancedCode = !showAdvancedCode\">code</mat-icon>\r\n  </div>\r\n  <mat-card class=\"gctr-card\">\r\n    <ng-template [ngIf]=\"!showAdvancedCode\" [ngIfElse]=\"advancedCode\">\r\n      <gctr-data-table [dataTableSettings]=\"inputsExampleDataTableSettings\"\r\n        [(selectionModel)]=\"exampleSelectionModel\">\r\n      </gctr-data-table>\r\n    </ng-template>\r\n    <ng-template #advancedCode>\r\n      <app-code [title]=\"'data-table/advanced.ts'\"></app-code>\r\n    </ng-template>\r\n  </mat-card>\r\n</app-documentation>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-gctr-card',\r\n  templateUrl: './gctr-card.component.html',\r\n  styleUrls: ['./gctr-card.component.scss']\r\n})\r\nexport class CardDocumentationComponent implements OnInit {\r\n  public componentName = 'CardComponent';\r\n  public module = 'GctrCardModule';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-documentation [componentName]=\"componentName\" [module]=\"module\" [codeTitle]=\"'gctr-card/gctr-card.html'\">\r\n  <gctr-card>\r\n    Hello World\r\n  </gctr-card>\r\n</app-documentation>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-grid',\r\n  templateUrl: './grid.component.html',\r\n  styleUrls: ['./grid.component.scss']\r\n})\r\nexport class GridComponent {\r\n  showCode: boolean;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<gctr-card classes=\"grid relative\">\r\n    <gctr-icon icon=\"code\" class=\"pointer absolute top-16 right-16\" (click)=\"showCode = !showCode\">code\r\n    </gctr-icon>\r\n    <h1 class=\"default margin-top-0\">Grid</h1>\r\n    <p class=\"margin-top-0 default\">Responsive grid system with up to 5 columns using only CSS display grid.</p>\r\n\r\n    <div class=\"gctr-grid two-columns\">\r\n        <div class=\"gctr-grid-row\">column 1</div>\r\n        <div class=\"gctr-grid-row\">column 2</div>\r\n    </div>\r\n    <div class=\"margin-bottom-32\" *ngIf=\"showCode\">\r\n        <markdown ngPreserveWhitespaces>\r\n            ```html\r\n            <div class=\"gctr-grid two-columns\">\r\n                <div class=\"gctr-grid-row\">column 1</div>\r\n                <div class=\"gctr-grid-row\">column 2</div>\r\n            </div>\r\n            ```\r\n        </markdown>\r\n    </div>\r\n\r\n    <div class=\"gctr-grid three-columns\">\r\n        <div class=\"gctr-grid-row\">column 1</div>\r\n        <div class=\"gctr-grid-row\">column 2</div>\r\n        <div class=\"gctr-grid-row\">column 3</div>\r\n    </div>\r\n    <div class=\"margin-bottom-32\" *ngIf=\"showCode\">\r\n        <markdown ngPreserveWhitespaces>\r\n            ```html\r\n            <div class=\"gctr-grid three-columns\">\r\n                <div class=\"gctr-grid-row\">column 1</div>\r\n                <div class=\"gctr-grid-row\">column 2</div>\r\n                <div class=\"gctr-grid-row\">column 3</div>\r\n            </div>\r\n            ```\r\n        </markdown>\r\n    </div>\r\n\r\n    <div class=\"gctr-grid four-columns\">\r\n        <div class=\"gctr-grid-row\">column 1</div>\r\n        <div class=\"gctr-grid-row\">column 2</div>\r\n        <div class=\"gctr-grid-row\">column 3</div>\r\n        <div class=\"gctr-grid-row\">column 4</div>\r\n    </div>\r\n    <div class=\"margin-bottom-32\" *ngIf=\"showCode\">\r\n        <markdown ngPreserveWhitespaces>\r\n            ```html\r\n            <div class=\"gctr-grid four-columns\">\r\n                <div class=\"gctr-grid-row\">column 1</div>\r\n                <div class=\"gctr-grid-row\">column 2</div>\r\n                <div class=\"gctr-grid-row\">column 3</div>\r\n                <div class=\"gctr-grid-row\">column 4</div>\r\n            </div>\r\n            ```\r\n        </markdown>\r\n    </div>\r\n\r\n    <div class=\"gctr-grid five-columns\">\r\n        <div class=\"gctr-grid-row\">column 1</div>\r\n        <div class=\"gctr-grid-row\">column 2</div>\r\n        <div class=\"gctr-grid-row\">column 3</div>\r\n        <div class=\"gctr-grid-row\">column 4</div>\r\n        <div class=\"gctr-grid-row\">column 5</div>\r\n    </div>\r\n    <div class=\"margin-bottom-32\" *ngIf=\"showCode\">\r\n        <markdown ngPreserveWhitespaces>\r\n            ```html\r\n            <div class=\"gctr-grid five-columns\">\r\n                <div class=\"gctr-grid-row\">column 1</div>\r\n                <div class=\"gctr-grid-row\">column 2</div>\r\n                <div class=\"gctr-grid-row\">column 3</div>\r\n                <div class=\"gctr-grid-row\">column 4</div>\r\n                <div class=\"gctr-grid-row\">column 5</div>\r\n            </div>\r\n            ```\r\n        </markdown>\r\n    </div>\r\n\r\n    <div class=\"gctr-grid one-three-columns\">\r\n        <div class=\"gctr-grid-row\">column 1</div>\r\n        <div class=\"gctr-grid-row\">column 2</div>\r\n    </div>\r\n    <div class=\"margin-bottom-32\" *ngIf=\"showCode\">\r\n        <markdown ngPreserveWhitespaces>\r\n            ```html\r\n            <div class=\"gctr-grid one-three-columns\">\r\n                <div class=\"gctr-grid-row\">column 1</div>\r\n                <div class=\"gctr-grid-row\">column 2</div>\r\n            </div>\r\n            ```\r\n        </markdown>\r\n    </div>\r\n\r\n    <div class=\"gctr-grid three-one-columns\">\r\n        <div class=\"gctr-grid-row\">column 1</div>\r\n        <div class=\"gctr-grid-row\">column 2</div>\r\n    </div>\r\n    <div class=\"margin-bottom-32\" *ngIf=\"showCode\">\r\n        <markdown ngPreserveWhitespaces>\r\n            ```html\r\n            <div class=\"gctr-grid three-one-columns\">\r\n                <div class=\"gctr-grid-row\">column 1</div>\r\n                <div class=\"gctr-grid-row\">column 2</div>\r\n            </div>\r\n            ```\r\n        </markdown>\r\n    </div>\r\n\r\n    <div class=\"gctr-grid three-one-one-columns\">\r\n        <div class=\"gctr-grid-row\">column 1</div>\r\n        <div class=\"gctr-grid-row\">column 2</div>\r\n        <div class=\"gctr-grid-row\">column 3</div>\r\n    </div>\r\n    <div class=\"margin-bottom-32\" *ngIf=\"showCode\">\r\n        <markdown ngPreserveWhitespaces>\r\n            ```html\r\n            <div class=\"gctr-grid three-one-one-columns\">\r\n                <div class=\"gctr-grid-row\">column 1</div>\r\n                <div class=\"gctr-grid-row\">column 2</div>\r\n                <div class=\"gctr-grid-row\">column 3</div>\r\n            </div>\r\n            ```\r\n        </markdown>\r\n    </div>\r\n\r\n    <br><br>\r\n\r\n    <h2 class=\"default\">Grid</h2>\r\n    <p class=\"margin-top-0 default\">Responsive flex grid system with minimum width of 120 and dynamical lines.</p>\r\n\r\n    <div class=\"auto-column-container-120\">\r\n        <gctr-card cssClass=\"full-height\">\r\n            <div class=\"flex-justify-align-center text-center full-height\">\r\n                <mat-label>Column 1</mat-label>\r\n            </div>\r\n        </gctr-card>\r\n        <gctr-card cssClass=\"full-height\">\r\n            <div class=\"flex-justify-align-center text-center full-height\">\r\n                <mat-label>Column 2</mat-label>\r\n            </div>\r\n        </gctr-card>\r\n        <gctr-card cssClass=\"full-height\">\r\n            <div class=\"flex-justify-align-center text-center full-height\">\r\n                <mat-label>Column 3</mat-label>\r\n            </div>\r\n        </gctr-card>\r\n        <gctr-card cssClass=\"full-height\">\r\n            <div class=\"flex-justify-align-center text-center full-height\">\r\n                <mat-label>Column 4</mat-label>\r\n            </div>\r\n        </gctr-card>\r\n        <gctr-card cssClass=\"full-height\">\r\n            <div class=\"flex-justify-align-center text-center full-height\">\r\n                <mat-label>Column 5</mat-label>\r\n            </div>\r\n        </gctr-card>\r\n    </div>\r\n\r\n</gctr-card>","import { Component } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\n\r\n@Component({\r\n    templateUrl: './header.component.html'\r\n})\r\nexport class HeaderComponent {\r\n    public componentName = 'HeaderComponent';\r\n    public module = 'GctrHeaderModule';\r\n    public simulatedLoading = true;\r\n    public slideChange(event: MatSlideToggleChange) {\r\n        this.simulatedLoading = event.checked;\r\n    }\r\n}\r\n","<app-documentation [componentName]=\"componentName\" [module]=\"module\" [codeTitle]=\"'gctr-header/gctr-header.html'\">\r\n    <mat-slide-toggle [checked]=\"simulatedLoading\" (change)=\"slideChange($event)\">Simulate Indeterminate Loading</mat-slide-toggle>\r\n  <gctr-header [isLoading]=\"simulatedLoading\">\r\n    Hello World\r\n  </gctr-header>\r\n</app-documentation>","import { Component, OnInit } from '@angular/core';\r\nimport { IconsService } from '../../services/icons.service';\r\nimport { Icons } from 'src/app/models/icons';\r\nimport { ClipboardService } from 'src/app/core/clipboard/clipboard.service';\r\n\r\n@Component({\r\n  selector: 'app-icons',\r\n  templateUrl: './icons.component.html',\r\n  styleUrls: ['./icons.component.scss'],\r\n  providers: [IconsService]\r\n})\r\nexport class IconsComponent implements OnInit {\r\n  public componentName = 'IconComponent';\r\n  public module = 'GctrIconModule';\r\n  public showCode: boolean = false;\r\n  public iconsList: Array<Array<Icons>> = [];\r\n\r\n  constructor(\r\n    private iconsService: IconsService,\r\n    private clipboard: ClipboardService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getIcons();\r\n  }\r\n\r\n  copyToClipboard(icon: string, iconFont: string): void {\r\n    this.clipboard.copyToClipboard(\r\n      `<gctr-icon icon=\"${icon}\"${iconFont &&\r\n        ` iconFont=\"${iconFont}\"`}></gctr-icon>`\r\n    );\r\n  }\r\n\r\n  getIcons() {\r\n    this.iconsList.push(this.iconsService.getIcons('glogo', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('add', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('add_to_queue', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('arrow_drop_down', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('arrow_back', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('arrow_forward', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('block', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('book', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('cancel', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('characterbox', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('check_box', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('check_circle', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('chevron_right', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('cloud_download', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('cloud_upload', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('close', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('credit_card', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('delete', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('description', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('done', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('downward', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('drafts', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('drag_handle', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('edit', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('equalizer', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('error', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('expand_more', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('file_copy', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('filter_list', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('format_size', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('help_outline', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('home_outline', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('image', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('important_devices', 'material-outlined'));\r\n    this.iconsList.push(this.iconsService.getIcons('insert_invitation', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('keyboard_arrow_left', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('keyboard_backspace', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('line_weight', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('local_activity', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('location_on', 'material-outlined'));\r\n    this.iconsList.push(this.iconsService.getIcons('mail', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('mail_outline', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('menu', 'material-outlined'));\r\n    this.iconsList.push(this.iconsService.getIcons('monetization_on', 'material-outlined'));\r\n    this.iconsList.push(this.iconsService.getIcons('more_vert', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('notifications_none', 'material-outlined'));\r\n    this.iconsList.push(this.iconsService.getIcons('number', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('optional-empty', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('pan_tool', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('pause', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('person', 'material-outlined'));\r\n    this.iconsList.push(this.iconsService.getIcons('person_add', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('photo_camera', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('play_arrow', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('publish', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('qualification', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('radio_button_checked', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('remove_circle_outline', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('settings', 'material-outlined'));\r\n    this.iconsList.push(this.iconsService.getIcons('settings_backup_restore', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('save', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('star', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('star_border', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('tune', 'material-outlined'));\r\n    this.iconsList.push(this.iconsService.getIcons('timelapse', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('upward', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('verified_user', 'material-outlined'));\r\n    this.iconsList.push(this.iconsService.getIcons('view_list', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('view_module', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('visibility', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('visibility_off', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('warning', ''));\r\n    this.iconsList.push(this.iconsService.getIcons('google', 'font-awesome-brand'));\r\n    this.iconsList.push(this.iconsService.getIcons('facebook-f', 'font-awesome-brand'));\r\n    this.iconsList.push(this.iconsService.getIcons('linkedin-in', 'font-awesome-brand'));\r\n    this.iconsList.push(this.iconsService.getIcons('twitter', 'font-awesome-brand'));\r\n    this.iconsList.push(this.iconsService.getIcons('top-empty', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('top-full', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('top-half', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('middle-empty', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('middle-full', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('middle-half', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('bottom-empty', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('bottom-full', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('bottom-half', 'gctr'));\r\n    this.iconsList.push(this.iconsService.getIcons('qual-card', 'gctr'));\r\n  }\r\n}\r\n","<app-documentation\r\n  [componentName]=\"componentName\"\r\n  [module]=\"module\"\r\n  [codeTitle]=\"'icon.html'\"\r\n>\r\n  <gctr-icon\r\n    icon=\"code\"\r\n    class=\"pointer absolute top-16 right-16\"\r\n    (click)=\"showCode = !showCode\"\r\n  ></gctr-icon>\r\n  <p>Icons pre-selected for the platform.</p>\r\n  <div class=\"color-palette icons margin-top-32\">\r\n    <div *ngFor=\"let icon of iconsList\" class=\"items-block\">\r\n      <div *ngFor=\"let i of icon\">\r\n        <gctr-icon\r\n          icon=\"{{ i.icon }}\"\r\n          iconFont=\"{{ i.iconFont }}\"\r\n          size=\"{{ i.size }}\"\r\n          class=\"pointer\"\r\n          (click)=\"copyToClipboard(i.icon, i.iconFont)\"\r\n          [matTooltip]=\"'Copy To Clipboard'\"\r\n        ></gctr-icon>\r\n        <div class=\"content\">\r\n          <div class=\"flex justify-content-space-between\">\r\n            <p class=\"bold margin-top-0\">{{ i.icon }}</p>\r\n          </div>\r\n          <p class=\"margin-0 grey-color\" *ngIf=\"showCode\">\r\n            &lt;gctr-icon icon=\"{{ i.icon }}\"\r\n            <b class=\"nobold\" *ngIf=\"i.iconFont\">iconFont=\"{{ i.iconFont }}\"</b\r\n            >> &lt;/gctr-icon>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</app-documentation>\r\n","export * from './actions/actions.component';\r\nexport * from './buttons/buttons.component';\r\nexport * from './css/css.component';\r\nexport * from './colors/colors.component';\r\nexport * from './dashboard/dashboard.component';\r\nexport * from './data-table/data-table.component';\r\nexport * from './grid/grid.component';\r\nexport * from './icons/icons.component';\r\nexport * from './gctr-card/gctr-card.component';\r\nexport * from './popover/popover.component';\r\nexport * from './loading-card/loading-card.component';\r\nexport * from './popover/popover.component';\r\nexport * from './progress-bar/progress-bar.component';\r\nexport * from './rating/rating.component';\r\nexport * from './structure/structure.component';\r\nexport * from './typography/typography.component';\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\n\r\n@Component({\r\n  selector: 'app-loading-card',\r\n  templateUrl: './loading-card.component.html',\r\n  styleUrls: ['./loading-card.component.scss']\r\n})\r\nexport class LoadingCardDocumentationComponent implements OnInit {\r\n  public componentName = 'LoadingCardComponent';\r\n  public module = 'GctrLoadingCardModule';\r\n  public simulatedLoading: boolean;\r\n  public simulatedDeterminateLoading: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public slideChange(event: MatSlideToggleChange) {\r\n    this.simulatedLoading = event.checked;\r\n  }\r\n\r\n  public slideDeterminateChange(event: MatSlideToggleChange) {\r\n    this.simulatedDeterminateLoading = event.checked;\r\n  }\r\n\r\n}\r\n","<app-documentation [componentName]=\"componentName\" [module]=\"module\" [codeTitle]=\"'loading-card/loading-card.html'\">\r\n  <gctr-loading-card [isLoading]=\"simulatedLoading\" cssClass=\"padding-bottom-0\">\r\n    <mat-slide-toggle (change)=\"slideChange($event)\">Simulate Indeterminate Loading</mat-slide-toggle>\r\n  </gctr-loading-card>\r\n  <div class=\"margin-top-32\"></div>\r\n  <gctr-loading-card [isLoading]=\"simulatedDeterminateLoading\" mode=\"determinate\" value=\"40\">\r\n    <mat-slide-toggle (change)=\"slideDeterminateChange($event)\">Simulate Determinate Loading</mat-slide-toggle>\r\n  </gctr-loading-card>\r\n</app-documentation>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-popover',\r\n  templateUrl: './popover.component.html',\r\n  styleUrls: ['./popover.component.scss']\r\n})\r\nexport class PopoverComponent implements OnInit {\r\n  public componentName = 'PopoverComponent';\r\n  public module = 'GctrPopoverModule';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","<app-documentation [componentName]=\"componentName\" [module]=\"module\" [codeTitle]=\"'popover.html'\">\r\n  <gctr-popover icon=\"done\" iconFont=\"material-outlined\" label=\"Show on hover\" text=\"Popover text\" triggerOn=\"hover\"></gctr-popover>\r\n  <span class=\"margin-left-std\"></span>\r\n  <gctr-popover icon=\"done\" iconFont=\"material-outlined\" label=\"Show on click\" text=\"Popover <a href=''>text</a>\" triggerOn=\"click\"></gctr-popover>\r\n  <span class=\"margin-left-std\"></span>\r\n  <gctr-popover icon=\"help_outline\" iconFont=\"material-outlined\" text=\"Popover text\"></gctr-popover>\r\n</app-documentation>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.scss']\r\n})\r\nexport class ProgressBarComponent implements OnInit {\r\n  public componentName = 'ProgressBarComponent';\r\n  public module = 'GctrProgressBarModule';\r\n  public value = 40;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","<app-documentation [componentName]=\"componentName\" [module]=\"module\" [codeTitle]=\"'progress-bar.html'\">\r\n  <p>Progress bar indeterminate mode</p>\r\n  <div class=\"max-width-300\">\r\n    <gctr-progress-bar [isLoading]=\"true\"></gctr-progress-bar>\r\n  </div>\r\n  <br><br>\r\n  <p>Progress bar determinate mode in <input type=\"number\" max=\"100\" min=\"0\" [(ngModel)]=\"value\" />%</p>\r\n  <div class=\"max-width-300\">\r\n    <gctr-progress-bar [isLoading]=\"true\" [mode]=\"'determinate'\" [value]=\"value\"></gctr-progress-bar>\r\n  </div>\r\n</app-documentation>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rating',\r\n  templateUrl: './rating.component.html',\r\n  styleUrls: ['./rating.component.scss']\r\n})\r\nexport class RatingComponent implements OnInit {\r\n  public componentName = 'RatingComponent';\r\n  public module = 'GctrRatingModule';\r\n  public rate: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  getRate(rate: number) {\r\n    this.rate = rate;\r\n  }\r\n\r\n}\r\n","<app-documentation [componentName]=\"componentName\" [module]=\"module\"\r\n    [codeTitle]=\"'gctr-rating/gctr-rating.html'\">\r\n    <p>Rating <b *ngIf=\"rate\"> - {{ rate }} star<span *ngIf=\"rate > 1\">s</span></b> </p>\r\n    <gctr-rating (callback)=\"getRate($event)\"></gctr-rating>\r\n    <br />\r\n    <p>Display rating</p>\r\n    <gctr-rating rate=\"0\" readOnly=\"true\"></gctr-rating>\r\n    <gctr-rating rate=\"1\" readOnly=\"true\"></gctr-rating>\r\n    <gctr-rating rate=\"2\" readOnly=\"true\"></gctr-rating>\r\n    <gctr-rating rate=\"3\" readOnly=\"true\"></gctr-rating>\r\n    <gctr-rating rate=\"4\" readOnly=\"true\"></gctr-rating>\r\n    <gctr-rating rate=\"5\" readOnly=\"true\"></gctr-rating>\r\n</app-documentation>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-structure',\r\n  templateUrl: './structure.component.html',\r\n  styleUrls: ['./structure.component.scss']\r\n})\r\nexport class StructureComponent implements OnInit {\r\n  showCode: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<gctr-card>\r\n\r\n    <div class=\"relative\">\r\n        <h1 class=\"default margin-top-0\">Structure</h1>\r\n        <i class=\"material-icons pointer absolute top right\" (click)=\"showCode = !showCode\">code</i>\r\n    </div>\r\n    <p>Main strucure of the page</p>\r\n    <div id=\"code\" class=\"margin-top-8\" *ngIf=\"showCode\">\r\n        &lt;gctr-header> &lt;/gctr-header>              <br /> \r\n        &lt;gctr-sidenav> &lt;/gctr-sidenav>           <br />\r\n        &lt;gctr-content>              <br />\r\n        &nbsp;&nbsp; &lt;gctr-card> &lt;/gctr-card>                  <br />\r\n        &lt;/gctr-content>\r\n    </div>\r\n\r\n    <h2 class=\"margin-bottom-0 margin-top-32\">Header</h2>\r\n    <p>Fix head on the top</p>\r\n    <div id=\"code\" class=\"margin-top-8\" *ngIf=\"showCode\">\r\n        &lt;gctr-header> &lt;/gctr-header>\r\n    </div>\r\n\r\n    <h2 class=\"margin-bottom-0 margin-top-32\">Sidenav</h2>\r\n    <p>Left sidenav bar</p>\r\n    <div id=\"code\" class=\"margin-top-8\" *ngIf=\"showCode\">\r\n        &lt;gctr-sidenav> &lt;/gctr-sidenav>\r\n    </div>\r\n\r\n    <h2 class=\"margin-bottom-0 margin-top-32\">Content</h2>\r\n    <p>Internal content</p>\r\n    <div id=\"code\" class=\"margin-top-8\" *ngIf=\"showCode\">\r\n        &lt;gctr-content> &lt;/gctr-content>\r\n    </div>\r\n\r\n    <h2 class=\"margin-bottom-0 margin-top-32\">Cards</h2>\r\n    <p>Cards for internal content</p>\r\n    <div id=\"code\" class=\"margin-top-8\" *ngIf=\"showCode\">\r\n        &lt;gctr-card> &lt;/gctr-card>\r\n    </div>\r\n\r\n</gctr-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-typography',\r\n  templateUrl: './typography.component.html',\r\n  styleUrls: ['./typography.component.scss']\r\n})\r\nexport class TypographyComponent implements OnInit {\r\n  showCode: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  array(n: number): number[] {\r\n    return Array(n);\r\n  }\r\n\r\n}\r\n","<gctr-card class=\"relative\">\r\n    <gctr-icon icon=\"code\" class=\"pointer absolute top-16 right-16\" (click)=\"showCode = !showCode\">code</gctr-icon>\r\n    <h1 class=\"default margin-top-0\">Typography</h1>\r\n    <p>Default family: Proxima Nova.</p>\r\n\r\n    <h2 class=\"margin-top-32\">Headings</h2>\r\n    <p>Default headings h1 to h4</p>\r\n    <div class=\"white-bgcolor bg-std radius-std shadow-std padding-std\">\r\n        <h1 class=\"margin-top-0\">The quick brown fox jumps over the lazy dog</h1>\r\n        <h2 class=\"margin-top-0\">The quick brown fox jumps over the lazy dog</h2>\r\n        <h3 class=\"margin-top-0\">The quick brown fox jumps over the lazy dog</h3>\r\n        <h4 class=\"margin-top-0\">The quick brown fox jumps over the lazy dog</h4>\r\n    </div>\r\n    <div class=\"margin-bottom-32\" *ngIf=\"showCode\">\r\n        <markdown ngPreserveWhitespaces>\r\n            ```html\r\n            <h1>The quick brown fox jumps over the lazy dog</h1>\r\n            <h2>The quick brown fox jumps over the lazy dog</h2>\r\n            <h3>The quick brown fox jumps over the lazy dog</h3>\r\n            <h4>The quick brown fox jumps over the lazy dog</h4>\r\n            ```\r\n        </markdown>\r\n    </div>\r\n\r\n    <h2 class=\"margin-top-32\">Paragraphs</h2>\r\n    <p>Default paragraph with p</p>\r\n    <div class=\"white-bgcolor bg-std radius-std shadow-std padding-std\">\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra pellentesque turpis, eget ullamcorper lorem lacinia in. Aliquam id porttitor felis. Mauris vel faucibus arcu, ornare sollicitudin magna. Etiam luctus lorem quis dui viverra suscipit. In velit turpis, ullamcorper eget ex vel, ullamcorper volutpat elit. </p>\r\n    </div>\r\n    <div class=\"margin-bottom-32\" *ngIf=\"showCode\">\r\n        <markdown ngPreserveWhitespaces>\r\n            ```html\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit... </p>\r\n            ```\r\n        </markdown>\r\n    </div>\r\n\r\n    <h2 class=\"margin-top-32\">Style</h2>\r\n    <p>Formating styles with bold, bolder, italic, underline, uppercase, lowercase and link.</p>\r\n    <div class=\"white-bgcolor bg-std radius-std shadow-std padding-std\">\r\n        <p> <span class=\"bold\">Bold text</span> | <b class=\"nobold\">No bold text</b> | <span class=\"bold-hover\">Bold on hover text</span> | <b class=\"nobold-hover\">No bold on hover text</b></p>\r\n        <p> <span class=\"italic\">Italic text</span> | <span class=\"noitalic\">No italic text</span> | <span class=\"italic-hover\">Italic on hover text</span> | <span class=\"italic noitalic-hover\">No italic on hover text</span></p>\r\n        <p> <span class=\"underline\">Underlined text</span> | <u class=\"nounderline\">No underlined text</u> | <span class=\"underline-hover\">Underlined on hover text</span> | <span class=\"underline nounderline-hover\">No underlined on hover text</span></p>\r\n        <p> <span class=\"uppercase\">Uppercase text</span> | <span class=\"uppercase-hover\">Uppercase on hover text</span></p>\r\n        <p> <span class=\"lowercase\">LOWERCASE TEXT</span> | <span class=\"lowercase-hover\">Lowercase On Hover Text</span></p>\r\n        <p> <a href=\"/\">This is a link</a> </p>\r\n    </div>\r\n    <div class=\"margin-bottom-32\" *ngIf=\"showCode\">\r\n        <markdown ngPreserveWhitespaces>\r\n            ```html\r\n            <span class=\"bold\">bold text</span>\r\n            <span class=\"nobold\">no bold text</span>\r\n            <span class=\"bold-hover\">bold on hover text</span>\r\n            <span class=\"italic\">Italic text</span>\r\n            <span class=\"noitalic\">no italic text</span>\r\n            <span class=\"italic-hover\">italic on hover text</span>\r\n            <span class=\"underline\">underline text</span>\r\n            <span class=\"nounderline\">no underline text</span>\r\n            <span class=\"underline-hover\">underline on hover text</span>\r\n            <span class=\"uppercase\">uppercase text</span>\r\n            <span class=\"uppercase-hover\">uppercase on hover text</span>\r\n            <span class=\"lowercase\">lowercase text</span>\r\n            <span class=\"lowercase-hover\">lowercase on hover text</span>\r\n            <a href=\"#\">this is a link</a>\r\n               ```\r\n        </markdown>\r\n    </div>\r\n\r\n    <h2 class=\"margin-top-32\">Sizes</h2>\r\n    <p>Font sizes from 8 to 100, multiples of 2</p>\r\n    <div class=\"white-bgcolor bg-std radius-std shadow-std padding-std\">\r\n        <p *ngFor=\"let item of array(10); let i = index\">\r\n            <span *ngIf=\"i > 3\" class=\"text{{ (i + 1) * 2 }} margin-0\">Text with font size {{ (i + 1) * 2 }}px </span>\r\n        </p>\r\n    </div>\r\n    <div class=\"margin-bottom-32\" *ngIf=\"showCode\">\r\n        <markdown ngPreserveWhitespaces>\r\n            ```html\r\n            <span class=\"text8\">text with font-size of 8px</span>\r\n            <span class=\"text10\">text with font-size of 10px</span>\r\n            <span class=\"text12\">text with font-size of 12px</span>\r\n            <span class=\"text14\">text with font-size of 14px</span>\r\n            <span class=\"text16\">text with font-size of 16px</span>\r\n            <span class=\"text18\">text with font-size of 18px</span>\r\n            <span class=\"text20\">text with font-size of 20px</span>\r\n               ```\r\n        </markdown>\r\n    </div>\r\n\r\n</gctr-card>\r\n","import { Buttons } from '../models/buttons';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class ButtonsService {\r\n    public getButtons(design, color, label = ''): Array<Buttons> {\r\n        const buttons = [\r\n            {\r\n                design: design,\r\n                color: color,\r\n                label: label,\r\n                type: 'button',\r\n                disabled: false\r\n            },\r\n            {\r\n                design: design,\r\n                color: color,\r\n                label: label,\r\n                type: 'button',\r\n                icon: 'done',\r\n                disabled: false\r\n            },\r\n            {\r\n                design: design,\r\n                color: color,\r\n                type: 'button',\r\n                icon: 'done',\r\n                disabled: false\r\n            },\r\n            {\r\n                design: design,\r\n                color: color,\r\n                label: label,\r\n                type: 'button',\r\n                icon: 'done',\r\n                disabled: true\r\n            }\r\n        ];\r\n        return buttons;\r\n    }\r\n}\r\n","import { Icons } from '../models/icons';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class IconsService {\r\n    public getIcons(icon: string, iconFont: string): Array<Icons> {\r\n        const icons = [\r\n            {\r\n                icon: icon,\r\n                iconFont: iconFont,\r\n                size: 'big'\r\n            }\r\n        ];\r\n        return icons;\r\n    }\r\n}\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MarkdownComponent } from 'ngx-markdown';\r\nimport { ClipboardService } from 'src/app/core/clipboard/clipboard.service';\r\n\r\n@Component({\r\n  selector: 'app-code',\r\n  templateUrl: './code.component.html',\r\n  styleUrls: ['./code.component.scss']\r\n})\r\nexport class CodeComponent implements OnInit {\r\n  @Input() title: string;\r\n  @ViewChild('markdown') markdown: MarkdownComponent;\r\n\r\n  constructor(private clipboard: ClipboardService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  copyToClipboard(): void {\r\n    this.clipboard.copyToClipboard(this.markdown.element.nativeElement.innerText);\r\n  }\r\n}\r\n","<div class=\"flex wrap\">\r\n  <h3>Code:</h3>\r\n</div>\r\n<div class=\"relative\">\r\n  <div class=\"absolute z999\" id=\"copy-button\">\r\n      <gctr-button\r\n        design=\"main\"\r\n        color=\"primary\"\r\n        class=\"margin-left-8\"\r\n        icon=\"file_copy\"\r\n        (click)=\"copyToClipboard()\"\r\n        tooltip=\"Copy To Clipboard\"\r\n      ></gctr-button>\r\n  </div>\r\n<markdown [src]=\"'assets/examples/' + title\" lineNumbers #markdown></markdown>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport {\r\n  DocumentationService,\r\n  Child,\r\n  Type\r\n} from 'src/app/core/documentation/documentation.service';\r\nimport {\r\n  DataColumnMode,\r\n  DataTableSettings\r\n} from 'projects/gctr-design-system/src/public_api';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-documentation',\r\n  templateUrl: './documentation.component.html',\r\n  styleUrls: ['./documentation.component.scss']\r\n})\r\nexport class DocumentationComponent implements OnInit {\r\n  @Input() componentName: string;\r\n  @Input() module: string;\r\n  @Input() codeTitle: string;\r\n  @Input() classes: string[] = [];\r\n  @Input() hideSelector: boolean;\r\n  public get inputDataTableSettings(): DataTableSettings<Child> {\r\n    return ({\r\n      displayedColumns: [\r\n        'name',\r\n        'type',\r\n        'defaultValue',\r\n        'comment'\r\n      ],\r\n      dataSource: this.inputs,\r\n      columnDefinitions: [\r\n        {\r\n          columnName: 'name',\r\n          title: 'Name'\r\n        },\r\n        {\r\n          columnName: 'type',\r\n          title: 'Type',\r\n          mode: DataColumnMode.transformer,\r\n          transformer: (item: Child) => this.getTypeString(item.type)\r\n        },\r\n        {\r\n          columnName: 'defaultValue',\r\n          title: 'Default Value'\r\n        },\r\n        {\r\n          columnName: 'comment',\r\n          title: 'Description',\r\n          mode: DataColumnMode.transformer,\r\n          transformer: (item: Child) =>\r\n            item.comment ? item.comment.shortText : null\r\n        }\r\n      ]\r\n    });\r\n  }\r\n  public get outputDataTableSettings(): DataTableSettings<Child> {\r\n    return ({\r\n      displayedColumns: [\r\n        'name',\r\n        'type',\r\n        'typeArguments',\r\n        'comment'\r\n      ],\r\n      dataSource: this.outputs,\r\n      columnDefinitions: [\r\n        {\r\n          columnName: 'name',\r\n          title: 'Name'\r\n        },\r\n        {\r\n          columnName: 'type',\r\n          title: 'Type',\r\n          mode: DataColumnMode.transformer,\r\n          transformer: (item: Child) => this.getTypeString(item.type)\r\n        },\r\n        {\r\n          columnName: 'typeArguments',\r\n          title: 'Type Arguements',\r\n          mode: DataColumnMode.transformer,\r\n          transformer: (item: Child) => this.getArguementString(item.type)\r\n        },\r\n        {\r\n          columnName: 'comment',\r\n          title: 'Description',\r\n          mode: DataColumnMode.transformer,\r\n          transformer: (item: Child) =>\r\n            item.comment ? item.comment.shortText : null\r\n        }]\r\n    });\r\n  }\r\n  public get twoWayDataTableSettings(): DataTableSettings<Child> {\r\n    return ({\r\n      displayedColumns: ['name', 'type', 'comment'\r\n      ],\r\n      dataSource: this.inputs,\r\n      columnDefinitions: [\r\n        {\r\n          columnName: 'name',\r\n          title: 'Name'\r\n        },\r\n        {\r\n          columnName: 'type',\r\n          title: 'Type',\r\n          mode: DataColumnMode.transformer,\r\n          transformer: (item: Child) => this.getTwoWayTypeString(item)\r\n        },\r\n        {\r\n          columnName: 'comment',\r\n          title: 'Description',\r\n          mode: DataColumnMode.transformer,\r\n          transformer: (item: Child) =>\r\n            item.comment ? item.comment.shortText : null\r\n        }\r\n      ]\r\n    });\r\n  }\r\n  public get methodDataTableSettings(): DataTableSettings<Child> {\r\n    return ({\r\n      displayedColumns: ['name', 'arguements', 'returns'],\r\n      dataSource: this.methods,\r\n      columnDefinitions: [\r\n        {\r\n          columnName: 'name',\r\n          title: 'Method'\r\n        },\r\n        {\r\n          columnName: 'arguements',\r\n          title: 'Args',\r\n          mode: DataColumnMode.list,\r\n          listAccessor: (item: Child) => this.getMethodArgs(item)\r\n        },\r\n        {\r\n          columnName: 'returns',\r\n          title: 'Returns',\r\n          mode: DataColumnMode.transformer,\r\n          transformer: (item: Child) => this.getReturnType(item)\r\n        }\r\n      ]\r\n    });\r\n  }\r\n  public selector = '';\r\n  public classesDocs = [];\r\n  public properties: Child[] = [];\r\n  public inputs: MatTableDataSource<Child> = new MatTableDataSource();\r\n  public outputs: MatTableDataSource<Child> = new MatTableDataSource();\r\n  public twoWayBound: MatTableDataSource<Child> = new MatTableDataSource();\r\n  public methods: MatTableDataSource<Child> = new MatTableDataSource();\r\n  public constructors: Child[] = [];\r\n  public componentDocs: Child;\r\n\r\n  constructor(\r\n    private documentationService: DocumentationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.componentDocs = this.documentationService.getDocs(this.componentName);\r\n    if (!this.componentDocs) {\r\n      console.error(\r\n        `No doumentation found for the supplied Component Name of \"${\r\n        this.componentName\r\n        }\"`\r\n      );\r\n    }\r\n    this.properties = [];\r\n    const methods = [];\r\n    this.constructors = [];\r\n    const twoWayBoundData = [];\r\n    const { children } = this.componentDocs;\r\n    children.forEach(e => {\r\n      if (e.kindString === 'Property') {\r\n        this.properties.push(e);\r\n      } else if (e.kindString === 'Method') {\r\n        methods.push(e);\r\n      } else if (e.kindString === 'Constructor') {\r\n        this.constructors.push(e);\r\n      } else if (\r\n        e.kindString === 'Accessor' &&\r\n        e.getSignature &&\r\n        e.setSignature\r\n      ) {\r\n        twoWayBoundData.push(e);\r\n      }\r\n    });\r\n    this.methods.data = methods;\r\n    this.twoWayBound.data = twoWayBoundData;\r\n    const inputData = [];\r\n    const outputData = [];\r\n    this.properties.forEach(e => {\r\n      if (e.decorators && e.decorators.some(z => z.name === 'Input')) {\r\n        inputData.push(e);\r\n      } else if (e.decorators && e.decorators.some(z => z.name === 'Output')) {\r\n        outputData.push(e);\r\n      }\r\n    });\r\n    this.outputs.data = outputData;\r\n    this.inputs.data = inputData;\r\n    const { obj } = this.componentDocs.decorators[0].arguments;\r\n    if (obj) {\r\n      const escaped = this.jsonEscape(obj);\r\n      const parsed = JSON.parse(escaped);\r\n      this.selector = parsed.selector;\r\n    }\r\n    this.getClasses();\r\n  }\r\n  jsonEscape(str: string): string {\r\n    return str\r\n      .replace(/(\\r\\n|\\n|\\r)/gm, '')\r\n      .replace(/'/g, '\"')\r\n      .replace(/:/g, '\":')\r\n      .replace(/  /g, ' \"');\r\n  }\r\n  getTypeString(type: Type): string {\r\n    if (type.name) {\r\n      return type.name;\r\n    }\r\n    let str = '';\r\n    type.types.forEach((element, index) => {\r\n      if (index > 0) {\r\n        str = str + ' | ';\r\n      }\r\n      str = str + '\"' + element.value + '\"';\r\n    });\r\n    return str;\r\n  }\r\n  getArguementString(type: Type): string {\r\n    let str = '';\r\n    if (type.typeArguments) {\r\n      type.typeArguments.forEach((element, index) => {\r\n        if (index > 0) {\r\n          str = str + ', ';\r\n        }\r\n        str = str + element.name;\r\n      });\r\n    }\r\n    return str;\r\n  }\r\n  getTwoWayTypeString(obj: Child) {\r\n    return obj.getSignature ? obj.getSignature[0].type.name : null;\r\n  }\r\n  getMethodArgs(obj: Child): string[] {\r\n    const result = [];\r\n    const { parameters } = obj.signatures[0];\r\n    if (parameters) {\r\n      parameters.forEach(e => {\r\n        result.push(`${e.name}: ${e.type.elementType ? e.type.elementType.name : e.type.name}`);\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n  getReturnType(obj: Child): string {\r\n    return obj.signatures[0].type.elementType ? obj.signatures[0].type.elementType.name : obj.signatures[0].type.name;\r\n  }\r\n  getClasses(): void {\r\n    this.classes.forEach(e => {\r\n      const documentation = this.documentationService.getDocs(e);\r\n      const { name } = documentation;\r\n      const props = documentation.children.map(f => {\r\n        return {\r\n          name: f.name,\r\n          type: f.type ? f.type.elementType ? f.type.elementType.name : f.type.name : null\r\n        };\r\n      });\r\n      this.classesDocs.push({\r\n        name,\r\n        props\r\n      });\r\n    });\r\n  }\r\n}\r\n","<gctr-card class=\"relative\">\r\n  <div class=\"scollParent\">\r\n    <h1 class=\"scroll-x scrollChild\">{{ componentDocs.name }}</h1>\r\n  </div>\r\n  <ng-content></ng-content>\r\n</gctr-card>\r\n\r\n<gctr-card cssClass=\"margin-top-32\">\r\n  <h2>Usage</h2>\r\n\r\n  <div *ngIf=\"module\" class=\"margin-top-16\">\r\n    <h3>Module:</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n      ```typescript\r\n      import &#123; {{ module }} &#125; from 'gctr-design-system'\r\n      ```\r\n    </markdown>\r\n  </div>\r\n\r\n  <div class=\"margin-top-16\" *ngIf=\"!hideSelector\">\r\n    <h3>Selector:</h3>\r\n    <markdown ngPreserveWhitespaces>\r\n      ```html\r\n      {{ selector }}\r\n      ```\r\n    </markdown>\r\n  </div>\r\n\r\n  <div *ngIf=\"codeTitle\" class=\"margin-top-16\">\r\n    <app-code [title]=\"codeTitle\"></app-code>\r\n  </div>\r\n</gctr-card>\r\n<ng-container *ngIf=\"inputs.data.length > 0\">\r\n  <gctr-card cssClass=\"margin-top-32\">\r\n    <h3 class=\"margin-top-16\">Inputs</h3>\r\n    <gctr-data-table [dataTableSettings]=\"inputDataTableSettings\"></gctr-data-table>\r\n  </gctr-card>\r\n</ng-container>\r\n<ng-container *ngIf=\"outputs.data.length > 0\">\r\n  <gctr-card cssClass=\"margin-top-32\">\r\n    <h3 class=\"margin-top-16\">Outputs</h3>\r\n    <gctr-data-table [dataTableSettings]=\"outputDataTableSettings\"></gctr-data-table>\r\n  </gctr-card>\r\n</ng-container>\r\n<ng-container *ngIf=\"twoWayBound.data.length > 0\">\r\n  <gctr-card cssClass=\"margin-top-32\">\r\n    <h3 class=\"margin-top-16\">Two-Way bound properties</h3>\r\n    <gctr-data-table [dataTableSettings]=\"twoWayDataTableSettings\"></gctr-data-table>\r\n  </gctr-card>\r\n</ng-container>\r\n<ng-container *ngIf=\"methods.data.length > 0\">\r\n  <gctr-card cssClass=\"margin-top-32\">\r\n    <h3 class=\"margin-top-32\">Methods:</h3>\r\n    <gctr-data-table [dataTableSettings]=\"methodDataTableSettings\"></gctr-data-table>\r\n  </gctr-card>\r\n</ng-container>\r\n<ng-container *ngIf=\"classes.length > 0\">\r\n  <gctr-card cssClass=\"margin-top-32\">\r\n    <h3 class=\"margin-top-32\">Classes:</h3>\r\n    <div *ngFor=\"let class of classesDocs\">\r\n      {{class.name}}\r\n      <ul>\r\n        <li *ngFor=\"let prop of class.props\">\r\n          {{prop.name}}{{prop.type && ': ' + prop.type}}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </gctr-card>\r\n</ng-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CodeComponent } from './code/code.component';\r\nimport { DocumentationComponent } from './documentation/documentation.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MarkdownModule, MarkedOptions } from 'ngx-markdown';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport {\r\n    GctrHeaderModule,\r\n    GctrSidenavModule,\r\n    GctrContentModule,\r\n    GctrActionBarModule,\r\n    GctrActionButtonModule,\r\n    GctrButtonModule,\r\n    GctrCardModule,\r\n    GctrDataTableModule,\r\n    GctrIconModule,\r\n    GctrLoadingCardModule,\r\n    GctrModalModule,\r\n    GctrProgressBarModule,\r\n    GctrSpinnerModule,\r\n    GctrRatingModule,\r\n    GctrPopoverModule\r\n} from 'projects/gctr-design-system/src/public_api';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CodeComponent,\r\n        DocumentationComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatSelectModule,\r\n        MatPaginatorModule,\r\n        MatSidenavModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatTableModule,\r\n        MatTooltipModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MarkdownModule.forRoot({\r\n            loader: HttpClient,\r\n            markedOptions: {\r\n                provide: MarkedOptions,\r\n                useValue: {\r\n                    gfm: true,\r\n                    tables: true,\r\n                    breaks: false,\r\n                    pedantic: false,\r\n                    sanitize: false,\r\n                    smartLists: true,\r\n                    smartypants: false\r\n                }\r\n            }\r\n        }),\r\n        // Design System\r\n        GctrHeaderModule,\r\n        GctrSidenavModule,\r\n        GctrContentModule,\r\n        GctrActionBarModule,\r\n        GctrActionButtonModule,\r\n        GctrButtonModule,\r\n        GctrCardModule,\r\n        GctrDataTableModule,\r\n        GctrIconModule,\r\n        GctrLoadingCardModule,\r\n        GctrModalModule,\r\n        GctrProgressBarModule,\r\n        GctrRatingModule,\r\n        GctrSpinnerModule,\r\n        GctrPopoverModule\r\n    ],\r\n    exports: [\r\n        CodeComponent, DocumentationComponent,\r\n        CommonModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatSelectModule,\r\n        MatPaginatorModule,\r\n        MatSidenavModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatTableModule,\r\n        MatTooltipModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MarkdownModule,\r\n        // Design System\r\n        GctrHeaderModule,\r\n        GctrSidenavModule,\r\n        GctrContentModule,\r\n        GctrActionBarModule,\r\n        GctrActionButtonModule,\r\n        GctrButtonModule,\r\n        GctrCardModule,\r\n        GctrDataTableModule,\r\n        GctrIconModule,\r\n        GctrLoadingCardModule,\r\n        GctrModalModule,\r\n        GctrProgressBarModule,\r\n        GctrRatingModule,\r\n        GctrSpinnerModule,\r\n        GctrPopoverModule\r\n    ]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}